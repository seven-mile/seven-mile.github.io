/*
THIS IS A GENERATED/BUNDLED FILE BY VITE
if you want to view the source, please visit the github repository https://github.com/Myriad-Dreamin/typst.ts/blob/main/packages/typst.ts
*/
var Me = Object.defineProperty;
var Pe = (n, t, e) => t in n ? Me(n, t, { enumerable: !0, configurable: !0, writable: !0, value: e }) : n[t] = e;
var h = (n, t, e) => Pe(n, typeof t != "symbol" ? t + "" : t, e);
const Te = [
  "LinLibertine_R.ttf",
  "LinLibertine_RB.ttf",
  "LinLibertine_RBI.ttf",
  "LinLibertine_RI.ttf",
  "NewCMMath-Book.otf",
  "NewCMMath-Regular.otf",
  "NewCM10-Regular.otf",
  "NewCM10-Bold.otf",
  "NewCM10-Italic.otf",
  "NewCM10-BoldItalic.otf",
  "DejaVuSansMono.ttf",
  "DejaVuSansMono-Bold.ttf",
  "DejaVuSansMono-Oblique.ttf",
  "DejaVuSansMono-BoldOblique.ttf"
], Oe = [
  "InriaSerif-Bold.ttf",
  "InriaSerif-BoldItalic.ttf",
  "InriaSerif-Italic.ttf",
  "InriaSerif-Regular.ttf",
  "Roboto-Regular.ttf",
  "NotoSerifCJKsc-Regular.otf"
], Fe = ["TwitterColorEmoji.ttf", "NotoColorEmoji.ttf"];
function It(n, t) {
  var i, o;
  const e = [...n];
  if (t && (t == null ? void 0 : t.assets) !== !1 && ((i = t == null ? void 0 : t.assets) != null && i.length) && ((o = t == null ? void 0 : t.assets) == null ? void 0 : o.length) > 0) {
    let s = t.assetUrlPrefix ?? "https://raw.githubusercontent.com/Myriad-Dreamin/typst/assets-fonts";
    s[s.length - 1] !== "/" && (s += "/");
    const c = (g) => g.map((d) => s + d);
    for (const g of t.assets)
      switch (g) {
        case "text":
          e.push(...c(Te));
          break;
        case "cjk":
          e.push(...c(Oe));
          break;
        case "emoji":
          e.push(...c(Fe));
          break;
      }
  }
  const r = async (s, { ref: c, builder: g }) => {
    t != null && t.fetcher && c.setFetcher(t.fetcher), await c.loadFonts(g, e);
  };
  return r._preloadRemoteFontOptions = t, r;
}
function Tt({ byFamily: n }) {
  return async (t, { builder: e }) => {
    const r = performance.now();
    if ("queryLocalFonts" in window) {
      const o = await window.queryLocalFonts();
      n = n ?? [];
      for (const s of o) {
        if (!n.includes(s.family))
          continue;
        const c = await (await s.blob()).arrayBuffer();
        await e.add_raw_font(new Uint8Array(c));
      }
    }
    const i = performance.now();
    console.log("preload system font time used:", i - r);
  };
}
function Le(n) {
  return async (t, { builder: e }) => new Promise((r) => {
    e.set_package_registry(n, function(i) {
      return n.resolve(i, this);
    }), r();
  });
}
function De(n) {
  return async (t, e) => {
    var r;
    if (e.alreadySetAccessModel)
      throw new Error(
        `already set some assess model before: ${(r = e.alreadySetAccessModel.constructor) == null ? void 0 : r.name}(${e.alreadySetAccessModel})`
      );
    return e.alreadySetAccessModel = n, new Promise((i) => {
      e.builder.set_access_model(
        n,
        (o) => {
          const s = n.getMTime(o);
          return s ? s.getTime() : 0;
        },
        (o) => n.isFile(o) || !1,
        (o) => n.getRealPath(o) || o,
        (o) => n.readAll(o)
      ), i();
    });
  };
}
const E = Symbol.for("reflexo-obj");
var At = /* @__PURE__ */ ((n) => (n[n.PIXEL_PER_PT = 3] = "PIXEL_PER_PT", n))(At || {});
class ie {
  constructor(t, e, r) {
    h(this, "loadPageCount");
    h(this, "imageScaleFactor");
    h(this, "container");
    h(this, "canvasList");
    h(this, "textLayerList");
    h(this, "commonList");
    h(this, "textLayerParentList");
    h(this, "semanticLayerList");
    this.pageInfos = t, this.imageScaleFactor = r.pixelPerPt ?? At.PIXEL_PER_PT, e.innerHTML = "", e.style.width = "100%", this.container = e, this.canvasList = new Array(this.loadPageCount), this.textLayerList = new Array(this.loadPageCount), this.commonList = new Array(this.loadPageCount), this.textLayerParentList = new Array(this.loadPageCount), this.semanticLayerList = new Array(this.loadPageCount);
    const i = (o, s, c) => {
      const g = Math.ceil(s.width) * this.imageScaleFactor, d = Math.ceil(s.height) * this.imageScaleFactor, w = this.canvasList[o] = document.createElement("canvas"), y = this.semanticLayerList[o] = document.createElement("div"), P = this.textLayerList[o] = document.createElement("div"), C = this.textLayerParentList[o] = document.createElement("div");
      if (w.getContext("2d")) {
        const D = document.createElement("div");
        w.width = g, w.height = d, D.appendChild(w), c.appendChild(D), D.style.position = "absolute";
      }
      {
        C.appendChild(P), C.className = "typst-html-semantics";
        const D = e.offsetWidth, z = D / s.width;
        C.style.width = `${D}px`, C.style.height = `${s.height * z}px`, C.style.setProperty("--data-text-width", `${z}px`), C.style.setProperty("--data-text-height", `${z}px`), c.classList.add("typst-page"), c.classList.add("canvas"), c.style.width = `${D}px`, c.style.height = `${d * z}px`, c.style.position = "relative", y.appendChild(C), c.appendChild(y);
      }
    };
    for (let o = 0; o < this.pageInfos.length; o++) {
      const s = this.pageInfos[o];
      let c;
      c = this.commonList[o] = document.createElement("div"), e.appendChild(c), i(o, s, c);
    }
  }
  resetLayout() {
    for (let t = 0; t < this.pageInfos.length; t++) {
      const e = this.pageInfos[t], r = Math.ceil(e.width) * this.imageScaleFactor, i = Math.ceil(e.height) * this.imageScaleFactor, o = this.canvasList[t].parentElement;
      if (!o)
        throw new Error(
          `canvasDiv is null for page ${t}, canvas list length ${this.canvasList.length}`
        );
      const s = this.commonList[t], c = this.textLayerParentList[t], g = this.container.offsetWidth, d = g / r;
      c.style.width = `${g}px`, c.style.height = `${i * d}px`, s.style.width = `${g}px`, s.style.height = `${i * d}px`;
      const w = this.container.offsetWidth / r;
      o.style.transformOrigin = "0px 0px", o.style.transform = `scale(${w})`;
    }
  }
}
const $e = (n) => {
  let t = !1, e;
  return () => t ? e : (t = !0, e = n());
};
class oe {
  constructor(t) {
    h(this, "wasmBin");
    h(this, "initOnce");
    if (typeof t != "function")
      throw new Error("initFn is not a function");
    this.initOnce = $e(async () => {
      await t(this.wasmBin);
    });
  }
  async init(t) {
    this.wasmBin = t, await this.initOnce();
  }
}
const je = (n, t) => t.some((e) => n instanceof e);
let Ot, Ft;
function We() {
  return Ot || (Ot = [
    IDBDatabase,
    IDBObjectStore,
    IDBIndex,
    IDBCursor,
    IDBTransaction
  ]);
}
function Be() {
  return Ft || (Ft = [
    IDBCursor.prototype.advance,
    IDBCursor.prototype.continue,
    IDBCursor.prototype.continuePrimaryKey
  ]);
}
const se = /* @__PURE__ */ new WeakMap(), Et = /* @__PURE__ */ new WeakMap(), _e = /* @__PURE__ */ new WeakMap(), pt = /* @__PURE__ */ new WeakMap(), Mt = /* @__PURE__ */ new WeakMap();
function ze(n) {
  const t = new Promise((e, r) => {
    const i = () => {
      n.removeEventListener("success", o), n.removeEventListener("error", s);
    }, o = () => {
      e(tt(n.result)), i();
    }, s = () => {
      r(n.error), i();
    };
    n.addEventListener("success", o), n.addEventListener("error", s);
  });
  return t.then((e) => {
    e instanceof IDBCursor && se.set(e, n);
  }).catch(() => {
  }), Mt.set(t, n), t;
}
function Ue(n) {
  if (Et.has(n))
    return;
  const t = new Promise((e, r) => {
    const i = () => {
      n.removeEventListener("complete", o), n.removeEventListener("error", s), n.removeEventListener("abort", s);
    }, o = () => {
      e(), i();
    }, s = () => {
      r(n.error || new DOMException("AbortError", "AbortError")), i();
    };
    n.addEventListener("complete", o), n.addEventListener("error", s), n.addEventListener("abort", s);
  });
  Et.set(n, t);
}
let St = {
  get(n, t, e) {
    if (n instanceof IDBTransaction) {
      if (t === "done")
        return Et.get(n);
      if (t === "objectStoreNames")
        return n.objectStoreNames || _e.get(n);
      if (t === "store")
        return e.objectStoreNames[1] ? void 0 : e.objectStore(e.objectStoreNames[0]);
    }
    return tt(n[t]);
  },
  set(n, t, e) {
    return n[t] = e, !0;
  },
  has(n, t) {
    return n instanceof IDBTransaction && (t === "done" || t === "store") ? !0 : t in n;
  }
};
function qe(n) {
  St = n(St);
}
function Ne(n) {
  return n === IDBDatabase.prototype.transaction && !("objectStoreNames" in IDBTransaction.prototype) ? function(t, ...e) {
    const r = n.call(ht(this), t, ...e);
    return _e.set(r, t.sort ? t.sort() : [t]), tt(r);
  } : Be().includes(n) ? function(...t) {
    return n.apply(ht(this), t), tt(se.get(this));
  } : function(...t) {
    return tt(n.apply(ht(this), t));
  };
}
function He(n) {
  return typeof n == "function" ? Ne(n) : (n instanceof IDBTransaction && Ue(n), je(n, We()) ? new Proxy(n, St) : n);
}
function tt(n) {
  if (n instanceof IDBRequest)
    return ze(n);
  if (pt.has(n))
    return pt.get(n);
  const t = He(n);
  return t !== n && (pt.set(n, t), Mt.set(t, n)), t;
}
const ht = (n) => Mt.get(n), Ve = ["get", "getKey", "getAll", "getAllKeys", "count"], Je = ["put", "add", "delete", "clear"], mt = /* @__PURE__ */ new Map();
function Lt(n, t) {
  if (!(n instanceof IDBDatabase && !(t in n) && typeof t == "string"))
    return;
  if (mt.get(t))
    return mt.get(t);
  const e = t.replace(/FromIndex$/, ""), r = t !== e, i = Je.includes(e);
  if (
    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.
    !(e in (r ? IDBIndex : IDBObjectStore).prototype) || !(i || Ve.includes(e))
  )
    return;
  const o = async function(s, ...c) {
    const g = this.transaction(s, i ? "readwrite" : "readonly");
    let d = g.store;
    return r && (d = d.index(c.shift())), (await Promise.all([
      d[e](...c),
      i && g.done
    ]))[0];
  };
  return mt.set(t, o), o;
}
qe((n) => ({
  ...n,
  get: (t, e, r) => Lt(t, e) || n.get(t, e, r),
  has: (t, e) => !!Lt(t, e) || n.has(t, e)
}));
class Ke {
  constructor() {
    h(this, "loadedFonts", /* @__PURE__ */ new Set());
    h(this, "fetcher", fetch);
  }
  setFetcher(t) {
    this.fetcher = t;
  }
  async loadFonts(t, e) {
    const r = new Function("m", "return import(m)"), i = this.fetcher || (this.fetcher = await async function() {
      const { fetchBuilder: c, FileSystemCache: g } = await r("node-fetch-cache"), d = new g({
        /// By default, we don't have a complicated cache policy.
        cacheDirectory: ".cache/typst/fonts"
      }), w = c.withCache(d);
      return function(y, P) {
        const C = setTimeout(() => {
          console.warn("font fetching is stucking:", y);
        }, 15e3);
        return w(y, P).finally(() => {
          clearTimeout(C);
        });
      };
    }()), o = e.filter((c) => c instanceof Uint8Array ? !0 : this.loadedFonts.has(c) ? !1 : (this.loadedFonts.add(c), !0)), s = await Promise.all(
      o.map(async (c) => {
        if (c instanceof Uint8Array) {
          await t.add_raw_font(c);
          return;
        }
        return new Uint8Array(await (await i(c)).arrayBuffer());
      })
    );
    for (const c of s)
      c && await t.add_raw_font(c);
  }
  async build(t, e, r) {
    const i = { ref: this, builder: e, hooks: r };
    for (const s of (t == null ? void 0 : t.beforeBuild) ?? [])
      await s(void 0, i);
    return r.latelyBuild && r.latelyBuild(i), await e.build();
  }
}
async function ae(n, t, e, r) {
  var i;
  return await t.init((i = n == null ? void 0 : n.getModule) == null ? void 0 : i.call(n)), await new Ke().build(n, new e(), r);
}
class Pt {
  constructor(t) {
    h(this, "hookedElem");
    h(this, "kModule");
    h(this, "opts");
    h(this, "modes", []);
    /// Configuration fields
    /// enable partial rendering
    h(this, "partialRendering", !0);
    /// underlying renderer
    h(this, "renderMode", "svg");
    h(this, "r");
    /// preview mode
    h(this, "previewMode", 0);
    /// whether this is a content preview
    h(this, "isContentPreview", !1);
    /// whether this content preview will mix outline titles
    h(this, "isMixinOutline", !1);
    /// background color
    h(this, "backgroundColor", "black");
    /// default page color (empty string means transparent)
    h(this, "pageColor", "white");
    /// pixel per pt
    h(this, "pixelPerPt", 3);
    /// customized way to retrieving dom state
    h(this, "retrieveDOMState");
    /// State fields
    /// whether svg is updating (in triggerSvgUpdate)
    h(this, "isRendering", !1);
    /// whether kModule is initialized
    h(this, "moduleInitialized", !1);
    /// patch queue for updating data.
    h(this, "patchQueue", []);
    /// resources to dispose
    h(this, "disposeList", []);
    /// canvas render ctoken
    h(this, "canvasRenderCToken");
    /// There are two scales in this class: The real scale is to adjust the size
    /// of `hookedElem` to fit the svg. The virtual scale (scale ratio) is to let
    /// user zoom in/out the svg. For example:
    /// + the default value of virtual scale is 1, which means the svg is totally
    ///   fit in `hookedElem`.
    /// + if user set virtual scale to 0.5, then the svg will be zoomed out to fit
    ///   in half width of `hookedElem`. "real" current scale of `hookedElem`
    h(this, "currentRealScale", 1);
    /// "virtual" current scale of `hookedElem`
    h(this, "currentScaleRatio", 1);
    /// timeout for delayed viewport change
    h(this, "vpTimeout");
    /// sampled by last render time.
    h(this, "sampledRenderTime", 0);
    /// page to partial render
    h(this, "partialRenderPage", 0);
    /// outline data
    h(this, "outline");
    /// cursor position in form of [page, x, y]
    h(this, "cursorPosition");
    // id: number = rnd++;
    /// Cache fields
    /// cached state of container, default to retrieve state from `this.hookedElem`
    h(this, "cachedDOMState", {
      width: 0,
      height: 0,
      window: {
        innerWidth: 0,
        innerHeight: 0
      },
      boundingRect: {
        left: 0,
        top: 0,
        right: 0
      }
    });
    var e, r;
    this.hookedElem = t.hookedElem, this.kModule = t.kModule, this.opts = t || {};
    {
      const { renderMode: i, previewMode: o, isContentPreview: s, retrieveDOMState: c } = t || {};
      this.partialRendering = !1, this.renderMode = i ?? this.renderMode, this.previewMode = o ?? this.previewMode, this.isContentPreview = s || !1, this.retrieveDOMState = c ?? (() => ({
        width: this.hookedElem.offsetWidth,
        height: this.hookedElem.offsetHeight,
        window: {
          innerWidth: window.innerWidth,
          innerHeight: window.innerHeight
        },
        boundingRect: this.hookedElem.getBoundingClientRect()
      })), this.backgroundColor = getComputedStyle(document.documentElement).getPropertyValue(
        "--typst-preview-background-color"
      );
    }
    this.hookedElem.classList.add("hide-scrollbar-x"), (e = this.hookedElem.parentElement) == null || e.classList.add("hide-scrollbar-x"), this.previewMode === 1 && (this.hookedElem.classList.add("hide-scrollbar-y"), (r = this.hookedElem.parentElement) == null || r.classList.add("hide-scrollbar-y")), this.installCtrlWheelHandler();
  }
  reset() {
    this.kModule.reset(), this.moduleInitialized = !1;
  }
  dispose() {
    const t = this.disposeList;
    this.disposeList = [], t.forEach((e) => e());
  }
  static derive(t, e) {
    return ["rescale", "rerender", "postRender"].reduce((r, i) => (r[i] = t[`${i}$${e}`].bind(t), console.assert(r[i] !== void 0, `${i}$${e} is undefined`), r), {});
  }
  registerMode(t) {
    const e = Pt.derive(this, t);
    this.modes.push([t, e]), t === this.renderMode && (this.r = e);
  }
  installCtrlWheelHandler() {
    const t = [
      0.1,
      0.2,
      0.3,
      0.4,
      0.5,
      0.6,
      0.7,
      0.8,
      0.9,
      1,
      1.1,
      1.3,
      1.5,
      1.7,
      1.9,
      2.1,
      2.4,
      2.7,
      3,
      3.3,
      3.7,
      4.1,
      4.6,
      5.1,
      5.7,
      6.3,
      7,
      7.7,
      8.5,
      9.4,
      10
    ], e = (r) => {
      var i, o, s, c;
      if (r.ctrlKey) {
        r.preventDefault(), this.cachedDOMState = this.retrieveDOMState(), window.onresize !== null && (window.onresize = null);
        const g = this.currentScaleRatio;
        if (r.deltaY < 0) {
          if (this.currentScaleRatio >= t.at(-1))
            return;
          this.currentScaleRatio = t.filter((C) => C > this.currentScaleRatio).at(0);
        } else if (r.deltaY > 0) {
          if (this.currentScaleRatio <= t.at(0))
            return;
          this.currentScaleRatio = t.filter((C) => C < this.currentScaleRatio).at(-1);
        } else
          return;
        const d = this.currentScaleRatio / g, w = r.pageX * (d - 1), y = r.pageY * (d - 1);
        Math.abs(this.currentScaleRatio - 1) < 1e-5 ? (this.hookedElem.classList.add("hide-scrollbar-x"), (i = this.hookedElem.parentElement) == null || i.classList.add("hide-scrollbar-x"), this.previewMode === 1 && (this.hookedElem.classList.add("hide-scrollbar-y"), (o = this.hookedElem.parentElement) == null || o.classList.add("hide-scrollbar-y"))) : (this.hookedElem.classList.remove("hide-scrollbar-x"), (s = this.hookedElem.parentElement) == null || s.classList.remove("hide-scrollbar-x"), this.previewMode === 1 && (this.hookedElem.classList.remove("hide-scrollbar-y"), (c = this.hookedElem.parentElement) == null || c.classList.remove("hide-scrollbar-y")));
        const P = this.hookedElem.firstElementChild;
        if (P) {
          const C = this.getSvgScaleRatio(), W = Number.parseFloat(P.getAttribute("data-height")), D = Math.ceil(W * C);
          this.hookedElem.style.height = `${D * 2}px`;
        }
        return window.scrollBy(w, y), this.addViewportChange(), !1;
      }
    };
    this.renderMode !== "dom" && (typeof acquireVsCodeApi < "u" ? (window.addEventListener("wheel", e, {
      passive: !1
    }), this.disposeList.push(() => {
      window.removeEventListener("wheel", e);
    })) : (document.body.addEventListener("wheel", e, {
      passive: !1
    }), this.disposeList.push(() => {
      document.body.removeEventListener("wheel", e);
    })));
  }
  /// Get current scale from html to svg
  // Note: one should retrieve dom state before rescale
  getSvgScaleRatio() {
    const t = this.hookedElem.firstElementChild;
    if (!t)
      return 0;
    const e = this.cachedDOMState, r = Number.parseFloat(
      t.getAttribute("data-width") || t.getAttribute("width") || "1"
    ), i = Number.parseFloat(
      t.getAttribute("data-height") || t.getAttribute("height") || "1"
    );
    return this.currentRealScale = this.previewMode === 1 ? Math.min(e.width / r, e.height / i) : e.width / r, this.currentRealScale * this.currentScaleRatio;
  }
  processQueue(t) {
    const e = t[0];
    switch (e) {
      case "new":
      case "diff-v1":
        return e === "new" && this.reset(), this.kModule.manipulateData({
          action: "merge",
          data: t[1]
        }), this.moduleInitialized = !0, !0;
      case "viewport-change":
        return this.moduleInitialized ? !0 : (console.log("viewport-change before initialization"), !1);
      default:
        return console.log("svgUpdateEvent", t), !1;
    }
  }
  triggerUpdate() {
    if (this.isRendering)
      return;
    this.isRendering = !0;
    const t = async () => {
      if (this.cachedDOMState = this.retrieveDOMState(), this.patchQueue.length === 0) {
        this.isRendering = !1, this.postprocessChanges();
        return;
      }
      try {
        let e = performance.now();
        const r = this.canvasRenderCToken;
        r && (await r.cancel(), await r.wait(), this.canvasRenderCToken = void 0, console.log("cancel canvas rendering"));
        let i = !1;
        for (; this.patchQueue.length > 0; )
          i = this.processQueue(this.patchQueue.shift()) || i;
        let o = performance.now();
        i && (this.r.rescale(), await this.r.rerender(), this.r.rescale());
        let s = performance.now();
        const c = (g, d, w) => `${g} ${(w - d).toFixed(2)} ms`;
        this.sampledRenderTime = s - e, console.log([c("parse", e, o), c("rerender", o, s), c("total", e, s)].join(", ")), requestAnimationFrame(t);
      } catch (e) {
        console.error(e), this.isRendering = !1, this.postprocessChanges();
      }
    };
    requestAnimationFrame(t);
  }
  postprocessChanges() {
    this.r.postRender(), this.previewMode === 1 && document.querySelectorAll(".typst-page-number-indicator").forEach((t) => {
      t.textContent = `${this.kModule.retrievePagesInfo().length}`;
    });
  }
  addChangement(t) {
    t[0] === "new" && this.patchQueue.splice(0, this.patchQueue.length);
    const e = () => {
      this.vpTimeout = void 0, this.patchQueue.push(t), this.triggerUpdate();
    };
    this.vpTimeout !== void 0 && clearTimeout(this.vpTimeout), t[0] === "viewport-change" && this.isRendering ? this.vpTimeout = setTimeout(e, this.sampledRenderTime || 100) : e();
  }
  addViewportChange() {
    this.addChangement(["viewport-change", ""]);
  }
}
function Ge(n) {
  return class {
    constructor(e) {
      h(this, "impl");
      h(this, "kModule");
      if (e.isContentPreview && (e.renderMode = "canvas"), this.kModule = e.kModule, this.impl = new n(e), !this.impl.r)
        throw new Error(`mode is not supported, ${e == null ? void 0 : e.renderMode}`);
      e.isContentPreview && (this.impl.partialRendering = !0, this.impl.pixelPerPt = 1, this.impl.isMixinOutline = !0);
    }
    dispose() {
      this.impl.dispose();
    }
    reset() {
      this.impl.reset();
    }
    addChangement(e) {
      this.impl.addChangement(e);
    }
    addViewportChange() {
      this.impl.addViewportChange();
    }
    setPageColor(e) {
      this.impl.pageColor = e, this.addViewportChange();
    }
    setPartialRendering(e) {
      this.impl.partialRendering = e;
    }
    setCursor(e, r, i) {
      this.impl.cursorPosition = [e, r, i];
    }
    setPartialPageNumber(e) {
      return e <= 0 || e > this.kModule.retrievePagesInfo().length ? !1 : (this.impl.partialRenderPage = e - 1, this.addViewportChange(), !0);
    }
    getPartialPageNumber() {
      return this.impl.partialRenderPage + 1;
    }
    setOutineData(e) {
      this.impl.outline = e, this.addViewportChange();
    }
  };
}
function Xe(n, ...t) {
  return t.reduce((e, r) => r(e), n);
}
class Qe {
  constructor() {
    h(this, "isCancellationRequested", !1);
    h(this, "_onCancelled");
    h(this, "_onCancelledResolveResolved");
    let t, e;
    this._onCancelled = new Promise((r) => {
      t = r, e && e(r);
    }), this._onCancelledResolveResolved = new Promise((r) => {
      e = r, t && r(t);
    });
  }
  async cancel() {
    await this._onCancelledResolveResolved, this.isCancellationRequested = !0;
  }
  isCancelRequested() {
    return this.isCancellationRequested;
  }
  async consume() {
    (await this._onCancelledResolveResolved)();
  }
  wait() {
    return this._onCancelled;
  }
}
const Ye = () => new Promise((n) => requestAnimationFrame(n));
function Ze(n) {
  return class extends n {
    constructor(...r) {
      super(...r);
      /// The template element for creating DOM by string.
      h(this, "tmpl", document.createElement("template"));
      /// The stub element for replacing an invisible element.
      h(this, "stub", this.createElement("<stub></stub>"));
      /// Typescript side of lib.
      h(this, "plugin");
      /// Rust side of kernel.
      h(this, "docKernel");
      /// The element to track.
      h(this, "resourceHeader");
      /// Expected exact state of the current DOM.
      /// Initially it is empty meaning no any page is rendered.
      h(this, "pages", []);
      /// The virtual scale of the document.
      h(this, "domScale", 1);
      /// Track mode.
      h(this, "track_mode", 0);
      /// Current executing task.
      h(this, "current_task");
      /// The currently maintained viewport.
      h(this, "viewport");
      if (this.registerMode("dom"), this.disposeList.push(() => {
        this.dispose();
      }), this.plugin = this.opts.renderer, this.opts.domScale !== void 0) {
        if (this.opts.domScale <= 0)
          throw new Error("domScale must be positive");
        this.domScale = this.opts.domScale;
      }
    }
    dispose() {
      for (const r of this.pages)
        r.dispose();
      this.docKernel && this.docKernel.free();
    }
    createElement(r) {
      return this.tmpl.innerHTML = r, this.tmpl.content.firstElementChild;
    }
    async mountDom(r) {
      if (console.log("mountDom", r), this.docKernel)
        throw new Error("already mounted");
      this.hookedElem.innerHTML = '<svg class="typst-svg-resources" viewBox="0 0 0 0" width="0" height="0" style="opacity: 0; position: absolute;"></svg>', this.resourceHeader = this.hookedElem.querySelector(".typst-svg-resources"), this.docKernel = await this.plugin.renderer.mount_dom(this.kModule[E], this.hookedElem), this.docKernel.bind_functions({
        populateGlyphs: (i) => {
          let o = this.createElement(i);
          console.log("populateGlyphs", o);
          let s = o.firstElementChild;
          this.resourceHeader.append(s);
        }
      });
    }
    async cancelAnyway$dom() {
      if (console.log("cancelAnyway$dom"), this.current_task) {
        const r = this.current_task;
        this.current_task = void 0, await r.cancel();
      }
    }
    retrieveDOMPages() {
      return Array.from(this.hookedElem.querySelectorAll(".typst-dom-page"));
    }
    // doesn't need to postRender
    postRender$dom() {
    }
    // doesn't need to rescale
    rescale$dom() {
    }
    getDomViewport(r, i) {
      const o = i.left, s = -i.top, c = i.right, g = r.innerHeight - i.top, d = {
        x: 0,
        y: s / this.domScale,
        width: Math.max(c - o, 0) / this.domScale,
        height: Math.max(g - s, 0) / this.domScale
      };
      return (d.width <= 0 || d.height <= 0) && (d.x = d.y = d.width = d.height = 0), d;
    }
    // fast mode
    async rerender$dom() {
      const r = this.retrieveDOMState(), { x: i, y: o, width: s, height: c } = this.getDomViewport(r.window, r.boundingRect);
      if (!await this.docKernel.relayout(i, o, s, c))
        return;
      const d = new Qe();
      this.doRender$dom(d), this.current_task = d;
    }
    async doRender$dom(r) {
      const i = (g, d) => {
        if (g && !r.isCancelRequested() && d)
          return d();
      }, o = this.retrieveDOMPages().map((g) => {
        const { innerWidth: d, innerHeight: w } = window, y = g.getBoundingClientRect();
        return {
          inWindow: !(y.left > d || y.right < 0 || y.top > w || y.bottom < 0),
          page: g
        };
      }), s = async (g) => {
        if (await Ye(), r.isCancelRequested()) {
          console.log("cancel stage", 0, g);
          return;
        }
        const d = o[g].page, w = d.getBoundingClientRect(), y = this.getDomViewport(window, w), P = ($) => this.docKernel.need_repaint(g, y.x, y.y, y.width, y.height, $), C = ($) => this.docKernel.repaint(g, y.x, y.y, y.width, y.height, $), W = ($) => {
          if (!r.isCancelRequested())
            return i(P($), () => C($));
        };
        await W(
          0
          /* Layout */
        );
        const D = (w.width ? Number.parseFloat(d.getAttribute("data-width")) / w.width : 1) * this.domScale, z = (w.height ? Number.parseFloat(d.getAttribute("data-height")) / w.height : 1) * this.domScale;
        if (y.x *= D, y.y *= z, y.y -= 100, y.width *= D, y.height *= z, y.height += 200, await W(
          1
          /* Svg */
        ), await W(
          2
          /* Semantics */
        ), r.isCancelRequested()) {
          console.log("cancel stage", 2, g);
          return;
        }
        P(
          3
          /* PrepareCanvas */
        ) ? (async () => {
          if (await C(
            3
            /* PrepareCanvas */
          ), !r.isCancelRequested())
            return W(
              4
              /* Canvas */
            );
        })() : await W(
          4
          /* Canvas */
        );
      }, c = async (g) => {
        for (let d = 0; d < o.length; ++d) {
          if (r.isCancelRequested()) {
            console.log("cancel page", 0, d);
            return;
          }
          o[d].inWindow === g && await s(d);
        }
      };
      this.cancelAnyway$dom(), await c(!0), await c(!1), !r.isCancelRequested() && console.log(
        "finished",
        0
        /* Layout */
      );
    }
  };
}
class tn extends Ge(
  Xe(
    Pt,
    Ze
  )
) {
}
var ee;
let yt = (ee = E, class {
  /**
   * @internal
   */
  constructor(t, e) {
    /**
     * @internal
     */
    h(this, ee);
    this.plugin = t, this[E] = e;
  }
  /**
   * @deprecated set in {@link RenderToCanvasOptions} instead
   *
   * Set the background color of the Typst document.
   * @param {string} t - The background color in format of `^#?[0-9a-f]{6}$`
   *
   * Note: Default to `#ffffff`.
   *
   * Note: Only available in canvas rendering mode.
   */
  set backgroundColor(t) {
    t !== void 0 && (this[E].background_color = t);
  }
  /**
   * Get the background color of the Typst document.
   *
   * Note: Default to `#ffffff`.
   *
   * Note: Only available in canvas rendering mode.
   */
  get backgroundColor() {
    return this[E].background_color;
  }
  /**
   * Set the pixel per point scale up the canvas panel.
   *
   * Note: Default to `3`.
   *
   * Note: Only available in canvas rendering mode.
   */
  set pixelPerPt(t) {
    t !== void 0 && (this[E].pixel_per_pt = t);
  }
  /**
   * @deprecated set in {@link RenderToCanvasOptions} instead
   *
   * Get the pixel per point scale up the canvas panel.
   *
   * Note: Default to `3`.
   *
   * Note: Only available in canvas rendering mode.
   */
  get pixelPerPt() {
    return this[E].pixel_per_pt;
  }
  /**
   * Reset state
   */
  reset() {
    this.plugin.resetSession(this);
  }
  /**
   * @deprecated
   * use {@link docWidth} instead
   */
  get doc_width() {
    return this[E].doc_width;
  }
  get docWidth() {
    return this[E].doc_width;
  }
  /**
   * @deprecated
   * use {@link docHeight} instead
   */
  get doc_height() {
    return this[E].doc_height;
  }
  get docHeight() {
    return this[E].doc_height;
  }
  retrievePagesInfo() {
    const t = this[E].pages_info, e = [], r = t.page_count;
    for (let i = 0; i < r; i++) {
      const o = t.page(i);
      e.push({
        pageOffset: o.page_off,
        width: o.width_pt,
        height: o.height_pt
      });
    }
    return e;
  }
  getSourceLoc(t) {
    return this[E].source_span(t);
  }
  /**
   * See {@link TypstRenderer#renderSvg} for more details.
   */
  renderSvg(t) {
    return this.plugin.renderSvg({
      renderSession: this,
      ...t
    });
  }
  /**
   * See {@link TypstRenderer#renderToSvg} for more details.
   */
  renderToSvg(t) {
    return this.plugin.renderToSvg({
      renderSession: this,
      ...t
    });
  }
  /**
   * See {@link TypstRenderer#renderCanvas} for more details.
   */
  renderCanvas(t) {
    return this.plugin.renderCanvas({
      renderSession: this,
      ...t
    });
  }
  /**
   * See {@link TypstRenderer#manipulateData} for more details.
   */
  manipulateData(t) {
    this.plugin.manipulateData({
      renderSession: this,
      ...t
    });
  }
  /**
   * See {@link TypstRenderer#renderSvgDiff} for more details.
   */
  renderSvgDiff(t) {
    return this.plugin.renderSvgDiff({
      renderSession: this,
      ...t
    });
  }
  /**
   * @deprecated
   * use {@link getSourceLoc} instead
   */
  get_source_loc(t) {
    return this[E].source_span(t);
  }
  /**
   * @deprecated
   * use {@link renderSvgDiff} instead
   */
  render_in_window(t, e, r, i) {
    return this[E].render_in_window(t, e, r, i);
  }
  /**
   * @deprecated
   * use {@link manipulateData} instead
   */
  merge_delta(t) {
    this.plugin.manipulateData({
      renderSession: this,
      action: "merge",
      data: t
    });
  }
});
var ne;
let en = (ne = E, class {
  /**
   * @internal
   */
  constructor(t, e) {
    /**
     * @internal
     */
    h(this, ne);
    /**
     * @internal
     */
    h(this, "managedCanvasElemList", /* @__PURE__ */ new Map());
    /**
     * @internal
     */
    h(this, "canvasCounter", Math.random());
    this.plugin = t, this[E] = e;
  }
  /**
   * See {@link TypstRenderer#manipulateData} for more details.
   */
  manipulateData(t, e) {
    return this[E].manipulate_data(t, e);
  }
  /**
   * You must submit all canvas in pages to ensure synchronization with the background worker
   *
   * See {@link TypstRenderer#renderCanvas} for more details.
   */
  renderCanvas(t) {
    const e = this.managedCanvasElemList;
    for (const [c, g] of e)
      g[0] = 0;
    for (const c of t) {
      const g = c.canvas;
      let d = g.dataset.manageId, w = 2;
      d || (d = this.canvasCounter.toFixed(5), this.canvasCounter += 1, g.dataset.manageId = d, w = 1);
      let y = e.get(d);
      if (y && y[0] !== 0)
        throw new Error("cannot update a canvas for two times in batch");
      e.set(d, [w, { ...c }]);
    }
    const r = Array.from(e.entries()), i = new Uint8Array(r.length), o = new Array(r.length), s = r.map(([c, [g, d]], w) => (g || e.delete(c), i[w] = g, o[w] = d.canvas, this.plugin.canvasOptionsToRust(d)));
    return this[E].render_canvas(i, o, s);
  }
  async retrievePagesInfo() {
    const t = await this[E].get_pages_info();
    console.log(t);
    const e = [], r = t.page_count;
    for (let i = 0; i < r; i++) {
      const o = t.page(i);
      e.push({
        pageOffset: o.page_off,
        width: o.width_pt,
        height: o.height_pt
      });
    }
    return e;
  }
});
const nn = (n) => new oe(async (t) => await n.default(t));
function Dt() {
  return new ce();
}
function Kn() {
  return new ce();
}
async function Gn() {
  return (await Promise.resolve().then(() => pe)).renderer_build_info();
}
let $t = !0;
class ce {
  constructor() {
    h(this, "renderer");
    h(this, "rendererJs");
  }
  async init(t) {
    var r;
    this.rendererJs = await (((r = t == null ? void 0 : t.getWrapper) == null ? void 0 : r.call(t)) || Promise.resolve().then(() => pe));
    const e = this.rendererJs.TypstRendererBuilder;
    this.renderer = await ae(
      t,
      nn(this.rendererJs),
      e,
      {}
    );
  }
  loadGlyphPack(t) {
    return Promise.resolve();
  }
  createOptionsToRust(t) {
    const e = new this.rendererJs.CreateSessionOptions();
    return t.format !== void 0 && (e.format = t.format), t.artifactContent !== void 0 && (e.artifact_content = t.artifactContent), e;
  }
  canvasOptionsToRust(t) {
    const e = new this.rendererJs.RenderPageImageOptions();
    if (t.pageOffset === void 0)
      throw new Error("pageOffset is required in reflexo v0.5.0");
    if (e.page_off = t.pageOffset, t.cacheKey !== void 0 && (e.cache_key = t.cacheKey), t.backgroundColor !== void 0 && (e.background_color = t.backgroundColor), t.pixelPerPt !== void 0 && (e.pixel_per_pt = t.pixelPerPt), t.dataSelection !== void 0) {
      let r = 0;
      t.dataSelection.body ? r |= 1 : t.canvas && $t && ($t = !1, console.warn("dataSelection.body is not set but providing canvas for body")), (t.dataSelection.text || t.dataSelection.annotation) && console.error("dataSelection.text and dataSelection.annotation are deprecated"), t.dataSelection.semantics && (r |= 8), e.data_selection = r;
    }
    return e;
  }
  retrievePagesInfoFromSession(t) {
    return t.retrievePagesInfo();
  }
  /**
   * Render a Typst document to canvas.
   */
  renderCanvas(t) {
    return this.withinOptionSession(t, async (e) => this.renderer.render_page_to_canvas(
      e[E],
      t.canvas || void 0,
      this.canvasOptionsToRust(t)
    ));
  }
  // async renderPdf(artifactContent: string): Promise<Uint8Array> {
  // return this.renderer.render_to_pdf(artifactContent);
  // }
  async inAnimationFrame(t) {
    return new Promise((e, r) => {
      requestAnimationFrame(() => {
        try {
          e(t());
        } catch (i) {
          r(i);
        }
      });
    });
  }
  async renderDisplayLayer(t, e, r) {
    const o = t[E].pages_info.page_count, s = async (w, y) => {
      const C = e[w].getContext("2d");
      if (!C)
        throw new Error("canvas context is null");
      return await this.renderCanvas({
        ...r,
        canvas: C,
        renderSession: t,
        pageOffset: y
      });
    }, c = performance.now(), g = await (async () => {
      const w = [];
      for (let y = 0; y < o; y++)
        w.push(await this.inAnimationFrame(() => s(y, y)));
      return w;
    })(), d = performance.now();
    return console.log(`display layer used: render = ${(d - c).toFixed(1)}ms`), g;
  }
  renderTextLayer(t, e) {
    const r = performance.now();
    t.forEach((o, s) => {
      o.innerHTML = e[s].htmlSemantics[0];
    });
    const i = performance.now();
    console.log(`text layer used: render = ${(i - r).toFixed(1)}ms`);
  }
  async render(t) {
    if ("format" in t && t.format !== "vector" && ["serde_json", "js", "ir"].includes(t.format))
      throw new Error(`deprecated format ${t.format}, please use vector format`);
    return this.renderToCanvas(t);
  }
  async renderDom(t) {
    if ("format" in t && t.format !== "vector" && ["serde_json", "js", "ir"].includes(t.format))
      throw new Error(`deprecated format ${t.format}, please use vector format`);
    return this.withinOptionSession(t, async (e) => {
      const r = new tn({
        ...t,
        renderMode: "dom",
        hookedElem: t.container,
        kModule: e,
        renderer: this
      });
      return await r.impl.mountDom(t.pixelPerPt), r;
    });
  }
  async renderToCanvas(t) {
    let e, r;
    const i = t.container;
    i.style.visibility = "hidden";
    const o = async (s, c) => {
      try {
        r = await this.renderDisplayLayer(e, s, t), c();
      } finally {
        i.style.visibility = "visible";
      }
    };
    return this.withinOptionSession(t, async (s) => {
      if (e = s, e[E].pages_info.page_count === 0)
        throw new Error("No page found in session");
      if (t.pixelPerPt !== void 0 && t.pixelPerPt <= 0)
        throw new Error(
          "Invalid typst.RenderOptions.pixelPerPt, should be a positive number " + t.pixelPerPt
        );
      let c = t.backgroundColor;
      if (c !== void 0 && !/^#[0-9a-f]{6}$/.test(c))
        throw new Error(
          "Invalid typst.backgroundColor color for matching ^#?[0-9a-f]{6}$ " + c
        );
      e.pixelPerPt = t.pixelPerPt ?? At.PIXEL_PER_PT, e.backgroundColor = c ?? "#ffffff";
      const g = performance.now(), d = new ie(
        this.retrievePagesInfoFromSession(e),
        i,
        t
      ), w = performance.now();
      console.log(`layer used: retrieve = ${(w - g).toFixed(1)}ms`), await o(d.canvasList, () => d.resetLayout()), this.renderTextLayer(d.textLayerList, r);
    });
  }
  createModule(t) {
    return Promise.resolve(
      new yt(
        this,
        this.renderer.create_session(
          t && this.createOptionsToRust({
            format: "vector",
            artifactContent: t
          })
        )
      )
    );
  }
  async createWorkerV0(t) {
    return new en(this, await this.renderer.create_worker(t));
  }
  workerBridge() {
    return this.renderer.create_worker_bridge();
  }
  renderSvg(t, e) {
    if (t instanceof yt || e)
      throw new Error("removed api, please use renderToSvg({ renderSession, container }) instead");
    return this.withinOptionSession(t, async (r) => {
      let i;
      return t.data_selection && (i = 0, t.data_selection.body && (i |= 1), t.data_selection.defs && (i |= 2), t.data_selection.css && (i |= 4), t.data_selection.js && (i |= 8)), Promise.resolve(this.renderer.svg_data(r[E], i));
    });
  }
  renderSvgDiff(t) {
    return t.window ? this.renderer.render_svg_diff(
      t.renderSession[E],
      t.window.lo.x,
      t.window.lo.y,
      t.window.hi.x,
      t.window.hi.y
    ) : this.renderer.render_svg_diff(
      t.renderSession[E],
      0,
      0,
      1e33,
      1e33
    );
  }
  renderToSvg(t) {
    return this.withinOptionSession(t, async (e) => Promise.resolve(this.renderer.render_svg(e[E], t.container)));
  }
  getCustomV1(t) {
    return Promise.resolve(this.renderer.get_customs(t.renderSession[E]));
  }
  resetSession(t) {
    return this.renderer.reset(t[E]);
  }
  manipulateData(t) {
    return this.renderer.manipulate_data(
      t.renderSession[E],
      t.action ?? "reset",
      t.data
    );
  }
  withinOptionSession(t, e) {
    function r(i) {
      return "artifactContent" in i;
    }
    if ("renderSession" in t)
      return e(t.renderSession);
    if (r(t))
      return this.runWithSession(t, e);
    throw new Error(
      "Invalid render options, should be one of RenderByContentOptions|RenderBySessionOptions"
    );
  }
  async runWithSession(t, e) {
    let r = t, i = e;
    e || (r = void 0, i = t);
    const o = this.renderer.create_session(
      /* moved */
      r && this.createOptionsToRust(r)
    );
    try {
      const s = await i(new yt(this, o));
      return o.free(), s;
    } catch (s) {
      throw o.free(), s;
    }
  }
}
var re;
re = E;
class rn {
  /**
   * @internal
   */
  constructor(t) {
    /**
     * @internal
     */
    h(this, re);
    this[E] = t;
  }
  /**
   * Reset the incremental server to the initial state.
   */
  reset() {
    this[E].reset();
  }
  /**
   * Return current result.
   */
  current() {
    return this[E].current();
  }
  /**
   * Also attach the debug info to the result.
   */
  setAttachDebugInfo(t) {
    this[E].set_attach_debug_info(t);
  }
}
const on = new oe(async (n) => await (await Promise.resolve().then(() => Ee)).default(n));
function sn() {
  return new _n();
}
class _n {
  constructor() {
    h(this, "compiler");
    h(this, "compilerJs");
  }
  async init(t) {
    var c, g, d, w;
    this.compilerJs = await Promise.resolve().then(() => Ee);
    const e = this.compilerJs.TypstCompilerBuilder, r = { ...t || {} }, i = (c = r.beforeBuild) == null ? void 0 : c.some(
      (y) => y._preloadRemoteFontOptions !== void 0
    ), o = (g = r.beforeBuild) == null ? void 0 : g.some(
      (y) => {
        var P;
        return ((P = y._preloadRemoteFontOptions) == null ? void 0 : P.assets) !== void 0;
      }
    ), s = (d = r.beforeBuild) == null ? void 0 : d.some(
      (y) => {
        var P;
        return ((P = y._preloadRemoteFontOptions) == null ? void 0 : P.assets) === !1;
      }
    );
    (!i || !o && !s) && ((w = r.beforeBuild) == null || w.push(
      It([], {
        assets: ["text"]
      })
    )), this.compiler = await ae(t, on, e, {});
  }
  compile(t) {
    return new Promise((e) => {
      if ("incrementalServer" in t) {
        e(
          this.compiler.incr_compile(
            t.mainFilePath,
            vt(t.inputs),
            t.incrementalServer[E],
            jt(t.diagnostics)
          )
        );
        return;
      }
      e(
        this.compiler.compile(
          t.mainFilePath,
          vt(t.inputs),
          t.format || "vector",
          jt(t.diagnostics)
        )
      );
    });
  }
  query(t) {
    return new Promise((e) => {
      e(
        JSON.parse(
          this.compiler.query(
            t.mainFilePath,
            vt(t.inputs),
            t.selector,
            t.field
          )
        )
      );
    });
  }
  getSemanticTokenLegend() {
    return new Promise((t) => {
      t(this.compiler.get_semantic_token_legend());
    });
  }
  getSemanticTokens(t) {
    return new Promise((e) => {
      this.compiler.reset(), e(
        this.compiler.get_semantic_tokens(
          t.offsetEncoding || "utf-16",
          t.mainFilePath,
          t.resultId
        )
      );
    });
  }
  async withIncrementalServer(t) {
    const e = new rn(this.compiler.create_incr_server());
    try {
      return await t(e);
    } finally {
      e[E].free();
    }
  }
  async getAst(t) {
    return this.compiler.get_ast(t);
  }
  async reset() {
    await new Promise((t) => {
      this.compiler.reset(), t(void 0);
    });
  }
  addSource(t, e) {
    if (arguments.length > 2)
      throw new Error(
        "use of addSource(path, source, isMain) is deprecated, please use addSource(path, source) instead"
      );
    this.compiler.add_source(t, e);
  }
  mapShadow(t, e) {
    this.compiler.map_shadow(t, e);
  }
  unmapShadow(t) {
    this.compiler.unmap_shadow(t);
  }
  resetShadow() {
    this.compiler.reset_shadow();
  }
  renderPageToCanvas() {
    throw new Error("Please use the api TypstRenderer.renderToCanvas in v0.4.0");
  }
}
function vt(n) {
  return n ? Object.entries(n) : void 0;
}
function jt(n) {
  switch (n) {
    case "none":
      return 1;
    case "unix":
      return 2;
    case "full":
      return 3;
    default:
      return 0;
  }
}
class an {
  constructor(t, e) {
    h(this, "fullyCached");
    h(this, "mTimes", /* @__PURE__ */ new Map());
    h(this, "mRealPaths", /* @__PURE__ */ new Map());
    h(this, "mData", /* @__PURE__ */ new Map());
    this.root = t, t.endsWith("/") && (this.root = this.root.slice(0, this.root.length - 1)), e != null && e.polyfillHeadRequest, this.fullyCached = !!(e != null && e.fullyCached);
  }
  reset() {
    this.mTimes.clear(), this.mRealPaths.clear(), this.mData.clear();
  }
  resolvePath(t) {
    return this.root + t;
  }
  insertFile(t, e, r) {
    this.mTimes.set(t, r), this.mData.set(t, e);
  }
  removeFile(t) {
    this.mTimes.delete(t), this.mData.delete(t);
  }
  async getPreloadScript() {
    const t = [];
    t.push("((async () => {"), t.push(
      "const snapshot = {  root: '', mTimes: new Map(),  mRealPaths: new Map(),  mData: [],};"
    ), t.push("const runFetch = async (path) => {"), t.push("  const res = await fetch(snapshot.root + path);"), t.push("  const buffer = await res.arrayBuffer();"), t.push("  return [path, new Uint8Array(buffer)];"), t.push("};"), t.push(`snapshot.root = ${JSON.stringify(this.root)};`), t.push(
      `snapshot.mTimes = new Map([${[...this.mTimes.entries()].map(([r, i]) => `[${JSON.stringify(r)}, ${(i == null ? void 0 : i.getTime()) || "undefined"}]`).join(", ")}]);`
    ), t.push(
      `snapshot.mRealPaths = new Map([${[...this.mRealPaths.entries()].map(([r, i]) => `[${JSON.stringify(r)}, ${JSON.stringify(i)}]`).join(", ")}]);`
    );
    const e = await Promise.all(
      [...this.mData.entries()].map(async ([r, i]) => (r = JSON.stringify(r), i ? `runFetch(${r})` : `Promise.resolve([${r}, undefined])`))
    );
    return t.push(`snapshot.mData = await Promise.all([${e.join(", ")}]);`), t.push("return snapshot;"), t.push("})())"), t.join(`
`);
  }
  getLastModified(t) {
    const e = new XMLHttpRequest();
    return e.open("HEAD", t, !1), e.send(null), e.status === 200 ? e.getResponseHeader("Last-Modified") : null;
  }
  getMTimeInternal(t) {
    const e = this.getLastModified(this.resolvePath(t));
    if (e)
      return new Date(e);
  }
  getMTime(t) {
    if (t.startsWith("/@memory/"))
      return this.mTimes.has(t) ? this.mTimes.get(t) : void 0;
    if (!this.fullyCached)
      return this.getMTimeInternal(t);
    if (this.mTimes.has(t))
      return this.mTimes.get(t);
    const e = this.getMTimeInternal(t);
    return this.mTimes.set(t, e), e;
  }
  // todo: isFile
  isFile() {
    return !0;
  }
  // todo: getRealPath
  getRealPath(t) {
    return t;
  }
  readAllInternal(t) {
    const e = new XMLHttpRequest();
    if (e.overrideMimeType("text/plain; charset=x-user-defined"), e.open("GET", this.resolvePath(t), !1), e.send(null), e.status === 200 && (e.response instanceof String || typeof e.response == "string"))
      return Uint8Array.from(e.response, (r) => r.charCodeAt(0));
  }
  readAll(t) {
    if (t.startsWith("/@memory/"))
      return this.mData.has(t) ? this.mData.get(t) : void 0;
    if (!this.fullyCached)
      return this.readAllInternal(t);
    if (this.mData.has(t))
      return this.mData.get(t);
    const e = this.readAllInternal(t);
    return this.mData.set(t, e), e;
  }
}
class cn {
  constructor() {
    h(this, "mTimes", /* @__PURE__ */ new Map());
    h(this, "mData", /* @__PURE__ */ new Map());
  }
  reset() {
    this.mTimes.clear(), this.mData.clear();
  }
  insertFile(t, e, r) {
    this.mTimes.set(t, r), this.mData.set(t, e);
  }
  removeFile(t) {
    this.mTimes.delete(t), this.mData.delete(t);
  }
  getMTime(t) {
    if (t.startsWith("/@memory/") && this.mTimes.has(t))
      return this.mTimes.get(t);
  }
  isFile() {
    return !0;
  }
  getRealPath(t) {
    return t;
  }
  readAll(t) {
    if (t.startsWith("/@memory/") && this.mData.has(t))
      return this.mData.get(t);
  }
}
class un {
  constructor(t) {
    h(this, "cache", /* @__PURE__ */ new Map());
    this.am = t;
  }
  resolvePath(t) {
    return `https://packages.typst.org/preview/${t.name}-${t.version}.tar.gz`;
  }
  pullPackageData(t) {
    const e = new XMLHttpRequest();
    if (e.overrideMimeType("text/plain; charset=x-user-defined"), e.open("GET", this.resolvePath(t), !1), e.send(null), e.status === 200 && (e.response instanceof String || typeof e.response == "string"))
      return Uint8Array.from(e.response, (r) => r.charCodeAt(0));
  }
  resolve(t, e) {
    if (t.namespace !== "preview")
      return;
    const r = this.resolvePath(t);
    if (this.cache.has(r))
      return this.cache.get(r)();
    const i = this.pullPackageData(t);
    if (!i)
      return;
    const o = `/@memory/fetch/packages/preview/${t.namespace}/${t.name}/${t.version}`, s = [];
    e.untar(i, (g, d, w) => {
      s.push([o + "/" + g, d, new Date(w)]);
    });
    const c = () => {
      for (const [g, d, w] of s)
        this.am.insertFile(g, d, w);
      return o;
    };
    return this.cache.set(r, c), c();
  }
}
typeof window < "u" && (window.TypstRenderModule = {
  RenderView: ie,
  createTypstRenderer: Dt,
  createTypstSvgRenderer: Dt,
  preloadRemoteFonts: It,
  preloadSystemFonts: Tt
}, window.TypstCompileModule = {
  createTypstCompiler: sn,
  preloadRemoteFonts: It,
  preloadSystemFonts: Tt,
  FetchAccessModel: an,
  MemoryAccessModel: cn,
  FetchPackageRegistry: un,
  withAccessModel: De,
  withPackageRegistry: Le
});
let _;
const H = new Array(128).fill(void 0);
H.push(void 0, null, !0, !1);
function a(n) {
  return H[n];
}
let G = H.length;
function gn(n) {
  n < 132 || (H[n] = G, G = n);
}
function R(n) {
  const t = a(n);
  return gn(n), t;
}
function m(n) {
  G === H.length && H.push(H.length + 1);
  const t = G;
  if (G = H[t], typeof G != "number") throw new Error("corrupt heap");
  return H[t] = n, t;
}
function O(n) {
  if (typeof n != "boolean")
    throw new Error(`expected a boolean argument, found ${typeof n}`);
}
const ue = typeof TextDecoder < "u" ? new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
typeof TextDecoder < "u" && ue.decode();
let Q = null;
function et() {
  return (Q === null || Q.byteLength === 0) && (Q = new Uint8Array(_.memory.buffer)), Q;
}
function I(n, t) {
  return n = n >>> 0, ue.decode(et().subarray(n, n + t));
}
let M = 0;
const _t = typeof TextEncoder < "u" ? new TextEncoder("utf-8") : { encode: () => {
  throw Error("TextEncoder not available");
} }, dn = typeof _t.encodeInto == "function" ? function(n, t) {
  return _t.encodeInto(n, t);
} : function(n, t) {
  const e = _t.encode(n);
  return t.set(e), {
    read: n.length,
    written: e.length
  };
};
function L(n, t, e) {
  if (typeof n != "string") throw new Error(`expected a string argument, found ${typeof n}`);
  if (e === void 0) {
    const c = _t.encode(n), g = t(c.length, 1) >>> 0;
    return et().subarray(g, g + c.length).set(c), M = c.length, g;
  }
  let r = n.length, i = t(r, 1) >>> 0;
  const o = et();
  let s = 0;
  for (; s < r; s++) {
    const c = n.charCodeAt(s);
    if (c > 127) break;
    o[i + s] = c;
  }
  if (s !== r) {
    s !== 0 && (n = n.slice(s)), i = e(i, r, r = s + n.length * 3, 1) >>> 0;
    const c = et().subarray(i + s, i + r), g = dn(n, c);
    if (g.read !== n.length) throw new Error("failed to pass whole string");
    s += g.written, i = e(i, r, s, 1) >>> 0;
  }
  return M = s, i;
}
function T(n) {
  return n == null;
}
let J = null;
function b() {
  return (J === null || J.buffer.detached === !0 || J.buffer.detached === void 0 && J.buffer !== _.memory.buffer) && (J = new DataView(_.memory.buffer)), J;
}
function Rt(n) {
  const t = typeof n;
  if (t == "number" || t == "boolean" || n == null)
    return `${n}`;
  if (t == "string")
    return `"${n}"`;
  if (t == "symbol") {
    const i = n.description;
    return i == null ? "Symbol" : `Symbol(${i})`;
  }
  if (t == "function") {
    const i = n.name;
    return typeof i == "string" && i.length > 0 ? `Function(${i})` : "Function";
  }
  if (Array.isArray(n)) {
    const i = n.length;
    let o = "[";
    i > 0 && (o += Rt(n[0]));
    for (let s = 1; s < i; s++)
      o += ", " + Rt(n[s]);
    return o += "]", o;
  }
  const e = /\[object ([^\]]+)\]/.exec(toString.call(n));
  let r;
  if (e.length > 1)
    r = e[1];
  else
    return toString.call(n);
  if (r == "Object")
    try {
      return "Object(" + JSON.stringify(n) + ")";
    } catch {
      return "Object";
    }
  return n instanceof Error ? `${n.name}: ${n.message}
${n.stack}` : r;
}
const ct = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => {
  _.__wbindgen_export_2.get(n.dtor)(n.a, n.b);
});
function Wt(n, t, e, r) {
  const i = { a: n, b: t, cnt: 1, dtor: e }, o = (...s) => {
    i.cnt++;
    try {
      return r(i.a, i.b, ...s);
    } finally {
      --i.cnt === 0 && (_.__wbindgen_export_2.get(i.dtor)(i.a, i.b), i.a = 0, ct.unregister(i));
    }
  };
  return o.original = i, ct.register(o, i, i), o;
}
function f(n, t) {
  try {
    return n.apply(this, t);
  } catch (e) {
    let r = function() {
      try {
        return e instanceof Error ? `${e.message}

Stack:
${e.stack}` : e.toString();
      } catch {
        return "<failed to stringify thrown value>";
      }
    }();
    throw console.error("wasm-bindgen: imported JS function that was not marked as `catch` threw an error:", r), e;
  }
}
function l(n) {
  if (typeof n != "number") throw new Error(`expected a number argument, found ${typeof n}`);
}
function fn(n, t) {
  l(n), l(t), _.__wbindgen_export_3(n, t);
}
function wn(n, t, e) {
  l(n), l(t), _.__wbindgen_export_4(n, t, m(e));
}
function ln(n, t, e, r) {
  const i = { a: n, b: t, cnt: 1, dtor: e }, o = (...s) => {
    i.cnt++;
    const c = i.a;
    i.a = 0;
    try {
      return r(c, i.b, ...s);
    } finally {
      --i.cnt === 0 ? (_.__wbindgen_export_2.get(i.dtor)(c, i.b), ct.unregister(i)) : i.a = c;
    }
  };
  return o.original = i, ct.register(o, i, i), o;
}
function bn(n, t, e) {
  l(n), l(t), _.__wbindgen_export_5(n, t, m(e));
}
function k(n, t) {
  try {
    return n.apply(this, t);
  } catch (e) {
    _.__wbindgen_export_7(m(e));
  }
}
function pn(n, t, e, r) {
  l(n), l(t), _.__wbindgen_export_8(n, t, m(e), m(r));
}
function U(n, t) {
  if (!(n instanceof t))
    throw new Error(`expected instance of ${t.name}`);
  return n.ptr;
}
function hn() {
  const n = _.renderer_build_info();
  return R(n);
}
function ut(n, t) {
  const e = t(n.length * 1, 1) >>> 0;
  return et().set(n, e / 1), M = n.length, e;
}
function Bt(n, t) {
  const e = t(n.length * 4, 4) >>> 0, r = b();
  for (let i = 0; i < n.length; i++)
    r.setUint32(e + 4 * i, m(n[i]), !0);
  return M = n.length, e;
}
let Y = null;
function mn() {
  return (Y === null || Y.byteLength === 0) && (Y = new Uint32Array(_.memory.buffer)), Y;
}
function yn(n, t) {
  const e = t(n.length * 4, 4) >>> 0;
  return mn().set(n, e / 4), M = n.length, e;
}
const zt = ["nonzero", "evenodd"], Ut = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_createsessionoptions_free(n >>> 0, 1));
class ge {
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Ut.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_createsessionoptions_free(t, 0);
  }
  constructor() {
    const t = _.createsessionoptions_new();
    return this.__wbg_ptr = t >>> 0, Ut.register(this, this.__wbg_ptr, this), this;
  }
  /**
   * @param {string} format
   */
  set format(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.createsessionoptions_set_format(this.__wbg_ptr, e, r);
  }
  /**
   * @param {Uint8Array} artifact_content
   */
  set artifact_content(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = ut(t, _.__wbindgen_export_0), r = M;
    _.createsessionoptions_set_artifact_content(this.__wbg_ptr, e, r);
  }
}
const qt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_incrdomdocclient_free(n >>> 0, 1));
class gt {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(gt.prototype);
    return e.__wbg_ptr = t, qt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, qt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_incrdomdocclient_free(t, 0);
  }
  /**
   * @param {any} functions
   */
  bind_functions(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), _.incrdomdocclient_bind_functions(this.__wbg_ptr, m(t));
  }
  /**
   * Relayout the document in the given window.
   * @param {number} x
   * @param {number} y
   * @param {number} w
   * @param {number} h
   * @returns {Promise<boolean>}
   */
  relayout(t, e, r, i) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const o = _.incrdomdocclient_relayout(this.__wbg_ptr, t, e, r, i);
    return R(o);
  }
  /**
   * @param {number} page_num
   * @param {number} x
   * @param {number} y
   * @param {number} w
   * @param {number} h
   * @param {number} stage
   * @returns {boolean}
   */
  need_repaint(t, e, r, i, o, s) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const w = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), l(t), l(s), _.incrdomdocclient_need_repaint(w, this.__wbg_ptr, t, e, r, i, o, s);
      var c = b().getInt32(w + 4 * 0, !0), g = b().getInt32(w + 4 * 1, !0), d = b().getInt32(w + 4 * 2, !0);
      if (d)
        throw R(g);
      return c !== 0;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {number} page_num
   * @param {number} x
   * @param {number} y
   * @param {number} w
   * @param {number} h
   * @param {number} stage
   * @returns {any}
   */
  repaint(t, e, r, i, o, s) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const w = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), l(t), l(s), _.incrdomdocclient_repaint(w, this.__wbg_ptr, t, e, r, i, o, s);
      var c = b().getInt32(w + 4 * 0, !0), g = b().getInt32(w + 4 * 1, !0), d = b().getInt32(w + 4 * 2, !0);
      if (d)
        throw R(g);
      return R(c);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const Nt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_pageinfo_free(n >>> 0, 1));
class rt {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(rt.prototype);
    return e.__wbg_ptr = t, Nt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Nt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_pageinfo_free(t, 0);
  }
  /**
   * @returns {number}
   */
  get page_off() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pageinfo_page_off(this.__wbg_ptr) >>> 0;
  }
  /**
   * @returns {number}
   */
  get width_pt() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pageinfo_width_pt(this.__wbg_ptr);
  }
  /**
   * @returns {number}
   */
  get height_pt() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pageinfo_height_pt(this.__wbg_ptr);
  }
}
const Ht = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_pagesinfo_free(n >>> 0, 1));
class dt {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(dt.prototype);
    return e.__wbg_ptr = t, Ht.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Ht.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_pagesinfo_free(t, 0);
  }
  /**
   * @returns {number}
   */
  get page_count() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pagesinfo_page_count(this.__wbg_ptr) >>> 0;
  }
  /**
   * @param {number} num
   * @returns {PageInfo | undefined}
   */
  page_by_number(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), l(t);
    const e = _.pagesinfo_page_by_number(this.__wbg_ptr, t);
    return e === 0 ? void 0 : rt.__wrap(e);
  }
  /**
   * @param {number} i
   * @returns {PageInfo}
   */
  page(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), l(t);
    const e = _.pagesinfo_page(this.__wbg_ptr, t);
    return rt.__wrap(e);
  }
  /**
   * @returns {number}
   */
  width() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pagesinfo_width(this.__wbg_ptr);
  }
  /**
   * @returns {number}
   */
  height() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.pagesinfo_height(this.__wbg_ptr);
  }
}
const Vt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_renderpageimageoptions_free(n >>> 0, 1));
class ot {
  static __unwrap(t) {
    return t instanceof ot ? t.__destroy_into_raw() : 0;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Vt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_renderpageimageoptions_free(t, 0);
  }
  constructor() {
    const t = _.renderpageimageoptions_new();
    return this.__wbg_ptr = t >>> 0, Vt.register(this, this.__wbg_ptr, this), this;
  }
  /**
   * @returns {number | undefined}
   */
  get pixel_per_pt() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.renderpageimageoptions_pixel_per_pt(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getFloat32(r + 4 * 1, !0);
      return t === 0 ? void 0 : e;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {number | undefined} [pixel_per_pt]
   */
  set pixel_per_pt(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), T(t) || l(t), _.renderpageimageoptions_set_pixel_per_pt(this.__wbg_ptr, !T(t), T(t) ? 0 : t);
  }
  /**
   * @returns {string | undefined}
   */
  get background_color() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.renderpageimageoptions_background_color(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = I(t, e).slice(), _.__wbindgen_export_6(t, e * 1, 1)), i;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string | undefined} [background_color]
   */
  set background_color(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    var e = T(t) ? 0 : L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.renderpageimageoptions_set_background_color(this.__wbg_ptr, e, r);
  }
  /**
   * @returns {number}
   */
  get page_off() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.renderpageimageoptions_page_off(this.__wbg_ptr) >>> 0;
  }
  /**
   * @param {number} page_off
   */
  set page_off(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), l(t), _.renderpageimageoptions_set_page_off(this.__wbg_ptr, t);
  }
  /**
   * @returns {string | undefined}
   */
  get cache_key() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.renderpageimageoptions_cache_key(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = I(t, e).slice(), _.__wbindgen_export_6(t, e * 1, 1)), i;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string | undefined} [cache_key]
   */
  set cache_key(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    var e = T(t) ? 0 : L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.renderpageimageoptions_set_cache_key(this.__wbg_ptr, e, r);
  }
  /**
   * @returns {number | undefined}
   */
  get data_selection() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.renderpageimageoptions_data_selection(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      return t === 0 ? void 0 : e >>> 0;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {number | undefined} [data_selection]
   */
  set data_selection(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), T(t) || l(t), _.renderpageimageoptions_set_data_selection(this.__wbg_ptr, !T(t), T(t) ? 0 : t);
  }
}
const Jt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_rendersession_free(n >>> 0, 1));
class j {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(j.prototype);
    return e.__wbg_ptr = t, Jt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Jt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_rendersession_free(t, 0);
  }
  /**
   * @param {number} rect_lo_x
   * @param {number} rect_lo_y
   * @param {number} rect_hi_x
   * @param {number} rect_hi_y
   * @returns {string}
   */
  render_in_window(t, e, r, i) {
    let o, s;
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const d = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersession_render_in_window(d, this.__wbg_ptr, t, e, r, i);
      var c = b().getInt32(d + 4 * 0, !0), g = b().getInt32(d + 4 * 1, !0);
      return o = c, s = g, I(c, g);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16), _.__wbindgen_export_6(o, s, 1);
    }
  }
  /**
   * @returns {number | undefined}
   */
  get pixel_per_pt() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersession_pixel_per_pt(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getFloat32(r + 4 * 1, !0);
      return t === 0 ? void 0 : e;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {number} pixel_per_pt
   */
  set pixel_per_pt(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), _.rendersession_set_pixel_per_pt(this.__wbg_ptr, t);
  }
  /**
   * @returns {string | undefined}
   */
  get background_color() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersession_background_color(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = I(t, e).slice(), _.__wbindgen_export_6(t, e * 1, 1)), i;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} background_color
   */
  set background_color(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.rendersession_set_background_color(this.__wbg_ptr, e, r);
  }
  /**
   * @returns {PagesInfo}
   */
  get pages_info() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const t = _.rendersession_pages_info(this.__wbg_ptr);
    return dt.__wrap(t);
  }
  /**
   * @returns {number}
   */
  get doc_width() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.rendersession_doc_width(this.__wbg_ptr);
  }
  /**
   * @returns {number}
   */
  get doc_height() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    return l(this.__wbg_ptr), _.rendersession_doc_height(this.__wbg_ptr);
  }
  /**
   * @param {Uint32Array} path
   * @returns {string | undefined}
   */
  source_span(t) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const s = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr);
      const c = yn(t, _.__wbindgen_export_0), g = M;
      _.rendersession_source_span(s, this.__wbg_ptr, c, g);
      var e = b().getInt32(s + 4 * 0, !0), r = b().getInt32(s + 4 * 1, !0), i = b().getInt32(s + 4 * 2, !0), o = b().getInt32(s + 4 * 3, !0);
      if (o)
        throw R(i);
      let d;
      return e !== 0 && (d = I(e, r).slice(), _.__wbindgen_export_6(e, r * 1, 1)), d;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const Kt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_rendersessionoptions_free(n >>> 0, 1));
class vn {
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Kt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_rendersessionoptions_free(t, 0);
  }
  constructor() {
    const t = _.rendersessionoptions_new();
    return this.__wbg_ptr = t >>> 0, Kt.register(this, this.__wbg_ptr, this), this;
  }
  /**
   * @returns {number | undefined}
   */
  get pixel_per_pt() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersessionoptions_pixel_per_pt(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getFloat32(r + 4 * 1, !0);
      return t === 0 ? void 0 : e;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {number} pixel_per_pt
   */
  set pixel_per_pt(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr), _.rendersessionoptions_set_pixel_per_pt(this.__wbg_ptr, t);
  }
  /**
   * @returns {string | undefined}
   */
  get background_color() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersessionoptions_background_color(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = I(t, e).slice(), _.__wbindgen_export_6(t, e * 1, 1)), i;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} background_color
   */
  set background_color(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.rendersessionoptions_set_background_color(this.__wbg_ptr, e, r);
  }
  /**
   * @returns {string | undefined}
   */
  get format() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const r = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.rendersessionoptions_format(r, this.__wbg_ptr);
      var t = b().getInt32(r + 4 * 0, !0), e = b().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = I(t, e).slice(), _.__wbindgen_export_6(t, e * 1, 1)), i;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} format
   */
  set format(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), r = M;
    _.rendersessionoptions_set_format(this.__wbg_ptr, e, r);
  }
}
const xt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_typstrenderer_free(n >>> 0, 1));
class ft {
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(ft.prototype);
    return e.__wbg_ptr = t, xt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, xt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_typstrenderer_free(t, 0);
  }
  /**
   * @param {RenderSession} ses
   * @param {any} canvas
   * @param {RenderPageImageOptions | undefined} [options]
   * @returns {Promise<any>}
   */
  render_page_to_canvas(t, e, r) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
      throw new Error("Attempt to use a moved value");
    let i = 0;
    if (!T(r)) {
      if (U(r, ot), r.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      i = r.__destroy_into_raw();
    }
    const o = _.typstrenderer_render_page_to_canvas(this.__wbg_ptr, t.__wbg_ptr, m(e), i);
    return R(o);
  }
  /**
   * @param {any} _v
   */
  load_glyph_pack(t) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const i = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr), _.typstrenderer_load_glyph_pack(i, this.__wbg_ptr, m(t));
      var e = b().getInt32(i + 4 * 0, !0), r = b().getInt32(i + 4 * 1, !0);
      if (r)
        throw R(e);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {RenderSession} ses
   * @param {HTMLElement} elem
   * @returns {Promise<IncrDomDocClient>}
   */
  mount_dom(t, e) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
      throw new Error("Attempt to use a moved value");
    const r = _.typstrenderer_mount_dom(this.__wbg_ptr, t.__wbg_ptr, m(e));
    return R(r);
  }
  constructor() {
    const t = _.typstrenderer_new();
    return this.__wbg_ptr = t >>> 0, xt.register(this, this.__wbg_ptr, this), this;
  }
  /**
   * @param {CreateSessionOptions | undefined} [options]
   * @returns {RenderSession}
   */
  create_session(t) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const o = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr);
      let s = 0;
      if (!T(t)) {
        if (U(t, ge), t.__wbg_ptr === 0)
          throw new Error("Attempt to use a moved value");
        s = t.__destroy_into_raw();
      }
      _.typstrenderer_create_session(o, this.__wbg_ptr, s);
      var e = b().getInt32(o + 4 * 0, !0), r = b().getInt32(o + 4 * 1, !0), i = b().getInt32(o + 4 * 2, !0);
      if (i)
        throw R(r);
      return j.__wrap(e);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {RenderSession} session
   */
  reset(t) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const i = _.__wbindgen_add_to_stack_pointer(-16);
      if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      _.typstrenderer_reset(i, this.__wbg_ptr, t.__wbg_ptr);
      var e = b().getInt32(i + 4 * 0, !0), r = b().getInt32(i + 4 * 1, !0);
      if (r)
        throw R(e);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {RenderSession} session
   * @param {string} action
   * @param {Uint8Array} data
   */
  manipulate_data(t, e, r) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const s = _.__wbindgen_add_to_stack_pointer(-16);
      if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      const c = L(e, _.__wbindgen_export_0, _.__wbindgen_export_1), g = M, d = ut(r, _.__wbindgen_export_0), w = M;
      _.typstrenderer_manipulate_data(s, this.__wbg_ptr, t.__wbg_ptr, c, g, d, w);
      var i = b().getInt32(s + 4 * 0, !0), o = b().getInt32(s + 4 * 1, !0);
      if (o)
        throw R(i);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {Uint8Array} artifact_content
   * @param {string} decoder
   * @returns {RenderSession}
   */
  session_from_artifact(t, e) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const s = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr);
      const c = ut(t, _.__wbindgen_export_0), g = M, d = L(e, _.__wbindgen_export_0, _.__wbindgen_export_1), w = M;
      _.typstrenderer_session_from_artifact(s, this.__wbg_ptr, c, g, d, w);
      var r = b().getInt32(s + 4 * 0, !0), i = b().getInt32(s + 4 * 1, !0), o = b().getInt32(s + 4 * 2, !0);
      if (o)
        throw R(i);
      return j.__wrap(r);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {RenderSession} session
   * @param {number} rect_lo_x
   * @param {number} rect_lo_y
   * @param {number} rect_hi_x
   * @param {number} rect_hi_y
   * @returns {string}
   */
  render_svg_diff(t, e, r, i, o) {
    let s, c;
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const w = _.__wbindgen_add_to_stack_pointer(-16);
      if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      _.typstrenderer_render_svg_diff(w, this.__wbg_ptr, t.__wbg_ptr, e, r, i, o);
      var g = b().getInt32(w + 4 * 0, !0), d = b().getInt32(w + 4 * 1, !0);
      return s = g, c = d, I(g, d);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16), _.__wbindgen_export_6(s, c, 1);
    }
  }
  /**
   * @param {RenderSession} session
   * @param {number | undefined} [parts]
   * @returns {string}
   */
  svg_data(t, e) {
    let r, i;
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const y = _.__wbindgen_add_to_stack_pointer(-16);
      if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      T(e) || l(e), _.typstrenderer_svg_data(y, this.__wbg_ptr, t.__wbg_ptr, !T(e), T(e) ? 0 : e);
      var o = b().getInt32(y + 4 * 0, !0), s = b().getInt32(y + 4 * 1, !0), c = b().getInt32(y + 4 * 2, !0), g = b().getInt32(y + 4 * 3, !0), d = o, w = s;
      if (g)
        throw d = 0, w = 0, R(c);
      return r = d, i = w, I(d, w);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16), _.__wbindgen_export_6(r, i, 1);
    }
  }
  /**
   * @param {RenderSession} session
   * @returns {Array<any> | undefined}
   */
  get_customs(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
      throw new Error("Attempt to use a moved value");
    const e = _.typstrenderer_get_customs(this.__wbg_ptr, t.__wbg_ptr);
    return R(e);
  }
  /**
   * @param {RenderSession} session
   * @param {HTMLElement} root
   * @returns {boolean}
   */
  render_svg(t, e) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const s = _.__wbindgen_add_to_stack_pointer(-16);
      if (l(this.__wbg_ptr), U(t, j), t.__wbg_ptr === 0)
        throw new Error("Attempt to use a moved value");
      _.typstrenderer_render_svg(s, this.__wbg_ptr, t.__wbg_ptr, m(e));
      var r = b().getInt32(s + 4 * 0, !0), i = b().getInt32(s + 4 * 1, !0), o = b().getInt32(s + 4 * 2, !0);
      if (o)
        throw R(i);
      return r !== 0;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {any} _w
   * @returns {Promise<TypstWorker>}
   */
  create_worker(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = _.typstrenderer_create_worker(this.__wbg_ptr, m(t));
    return R(e);
  }
  /**
   * @returns {WorkerBridge}
   */
  create_worker_bridge() {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const i = this.__destroy_into_raw(), o = _.__wbindgen_add_to_stack_pointer(-16);
      l(i), _.typstrenderer_create_worker_bridge(o, i);
      var t = b().getInt32(o + 4 * 0, !0), e = b().getInt32(o + 4 * 1, !0), r = b().getInt32(o + 4 * 2, !0);
      if (r)
        throw R(e);
      return wt.__wrap(t);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const Gt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_typstrendererbuilder_free(n >>> 0, 1));
class xn {
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Gt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_typstrendererbuilder_free(t, 0);
  }
  /**
   * @param {any} _pack
   * @returns {Promise<void>}
   */
  add_glyph_pack(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = _.typstrendererbuilder_add_glyph_pack(this.__wbg_ptr, m(t));
    return R(e);
  }
  /**
   * @param {Uint8Array} _font_buffer
   * @returns {Promise<void>}
   */
  add_raw_font(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = _.typstrendererbuilder_add_raw_font(this.__wbg_ptr, m(t));
    return R(e);
  }
  /**
   * @param {Array<any>} _fonts
   * @returns {Promise<void>}
   */
  add_web_fonts(t) {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const e = _.typstrendererbuilder_add_web_fonts(this.__wbg_ptr, m(t));
    return R(e);
  }
  constructor() {
    try {
      const i = _.__wbindgen_add_to_stack_pointer(-16);
      _.typstrendererbuilder_new(i);
      var t = b().getInt32(i + 4 * 0, !0), e = b().getInt32(i + 4 * 1, !0), r = b().getInt32(i + 4 * 2, !0);
      if (r)
        throw R(e);
      return this.__wbg_ptr = t >>> 0, Gt.register(this, this.__wbg_ptr, this), this;
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @returns {Promise<TypstRenderer>}
   */
  build() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    const t = this.__destroy_into_raw();
    l(t);
    const e = _.typstrendererbuilder_build(t);
    return R(e);
  }
}
const kn = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_typstworker_free(n >>> 0, 1));
class In {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, kn.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_typstworker_free(t, 0);
  }
  /**
   * @param {string} _action
   * @param {Uint8Array} _data
   * @returns {Promise<any>}
   */
  manipulate_data(t, e) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const s = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr);
      const c = L(t, _.__wbindgen_export_0, _.__wbindgen_export_1), g = M;
      _.typstworker_manipulate_data(s, this.__wbg_ptr, c, g, m(e));
      var r = b().getInt32(s + 4 * 0, !0), i = b().getInt32(s + 4 * 1, !0), o = b().getInt32(s + 4 * 2, !0);
      if (o)
        throw R(i);
      return R(r);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @returns {Promise<any>}
   */
  get_pages_info() {
    if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
    l(this.__wbg_ptr);
    const t = _.typstworker_get_pages_info(this.__wbg_ptr);
    return R(t);
  }
  /**
   * @param {Uint8Array} _actions
   * @param {(HTMLCanvasElement)[]} _canvas_list
   * @param {(RenderPageImageOptions)[]} _data
   * @returns {Promise<any>}
   */
  render_canvas(t, e, r) {
    try {
      if (this.__wbg_ptr == 0) throw new Error("Attempt to use a moved value");
      const c = _.__wbindgen_add_to_stack_pointer(-16);
      l(this.__wbg_ptr);
      const g = ut(t, _.__wbindgen_export_0), d = M, w = Bt(e, _.__wbindgen_export_0), y = M, P = Bt(r, _.__wbindgen_export_0), C = M;
      _.typstworker_render_canvas(c, this.__wbg_ptr, g, d, w, y, P, C);
      var i = b().getInt32(c + 4 * 0, !0), o = b().getInt32(c + 4 * 1, !0), s = b().getInt32(c + 4 * 2, !0);
      if (s)
        throw R(o);
      return R(i);
    } finally {
      _.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const Xt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => _.__wbg_workerbridge_free(n >>> 0, 1));
class wt {
  constructor() {
    throw new Error("cannot invoke `new` directly");
  }
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(wt.prototype);
    return e.__wbg_ptr = t, Xt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Xt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    _.__wbg_workerbridge_free(t, 0);
  }
}
async function En(n, t) {
  if (typeof Response == "function" && n instanceof Response) {
    if (typeof WebAssembly.instantiateStreaming == "function")
      try {
        return await WebAssembly.instantiateStreaming(n, t);
      } catch (r) {
        if (n.headers.get("Content-Type") != "application/wasm")
          console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", r);
        else
          throw r;
      }
    const e = await n.arrayBuffer();
    return await WebAssembly.instantiate(e, t);
  } else {
    const e = await WebAssembly.instantiate(n, t);
    return e instanceof WebAssembly.Instance ? { instance: e, module: n } : e;
  }
}
function de() {
  const n = {};
  return n.wbg = {}, n.wbg.__wbindgen_object_drop_ref = function(t) {
    R(t);
  }, n.wbg.__wbindgen_object_clone_ref = function(t) {
    const e = a(t);
    return m(e);
  }, n.wbg.__wbg_incrdomdocclient_new = function() {
    return f(function(t) {
      const e = gt.__wrap(t);
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_call_3bfa248576352471 = function() {
    return k(function(t, e, r) {
      const i = a(t).call(a(e), a(r));
      return m(i);
    }, arguments);
  }, n.wbg.__wbg_typstrenderer_new = function() {
    return f(function(t) {
      const e = ft.__wrap(t);
      return m(e);
    }, arguments);
  }, n.wbg.__wbindgen_jsval_eq = function(t, e) {
    const r = a(t) === a(e);
    return O(r), r;
  }, n.wbg.__wbg_instanceof_CanvasRenderingContext2d_775df7bd32f07559 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof CanvasRenderingContext2D;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_instanceof_OffscreenCanvasRenderingContext2d_07b9d9deabbab2c4 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof OffscreenCanvasRenderingContext2D;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_new_034f913e7636e987 = function() {
    return f(function() {
      const t = new Array();
      return m(t);
    }, arguments);
  }, n.wbg.__wbindgen_string_new = function(t, e) {
    const r = I(t, e);
    return m(r);
  }, n.wbg.__wbg_set_425e70f7c64ac962 = function() {
    return f(function(t, e, r) {
      a(t)[e >>> 0] = R(r);
    }, arguments);
  }, n.wbg.__wbg_new_e69b5f66fda8f13c = function() {
    return f(function() {
      const t = new Object();
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_set_e864d25d9b399c9f = function() {
    return k(function(t, e, r) {
      const i = Reflect.set(a(t), a(e), a(r));
      return O(i), i;
    }, arguments);
  }, n.wbg.__wbg_remove_d7a18d9f46bc50fd = function() {
    return f(function(t) {
      a(t).remove();
    }, arguments);
  }, n.wbg.__wbg_new_abda76e883ba8a5f = function() {
    return f(function() {
      const t = new Error();
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_stack_658279fe44541cf6 = function() {
    return f(function(t, e) {
      const r = a(e).stack, i = L(r, _.__wbindgen_export_0, _.__wbindgen_export_1), o = M;
      b().setInt32(t + 4 * 1, o, !0), b().setInt32(t + 4 * 0, i, !0);
    }, arguments);
  }, n.wbg.__wbg_error_f851667af71bcfc6 = function() {
    return f(function(t, e) {
      let r, i;
      try {
        r = t, i = e, console.error(I(t, e));
      } finally {
        _.__wbindgen_export_6(r, i, 1);
      }
    }, arguments);
  }, n.wbg.__wbg_self_bf91bf94d9e04084 = function() {
    return k(function() {
      const t = self.self;
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_window_52dd9f07d03fd5f8 = function() {
    return k(function() {
      const t = window.window;
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_globalThis_05c129bf37fcf1be = function() {
    return k(function() {
      const t = globalThis.globalThis;
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_global_3eca19bb09e9c484 = function() {
    return k(function() {
      const t = global.global;
      return m(t);
    }, arguments);
  }, n.wbg.__wbindgen_is_undefined = function(t) {
    const e = a(t) === void 0;
    return O(e), e;
  }, n.wbg.__wbg_newnoargs_1ede4bf2ebbaaf43 = function() {
    return f(function(t, e) {
      const r = new Function(I(t, e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_call_a9ef466721e824f2 = function() {
    return k(function(t, e) {
      const r = a(t).call(a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_new_70a2f23d1565c04c = function() {
    return f(function(t, e) {
      const r = new Error(I(t, e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_new_b1572e0bf16bb8b0 = function() {
    return k(function(t, e) {
      const r = new OffscreenCanvas(t >>> 0, e >>> 0);
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_getContext_211e7f0e615215a4 = function() {
    return k(function(t, e, r) {
      const i = a(t).getContext(I(e, r));
      return T(i) ? 0 : m(i);
    }, arguments);
  }, n.wbg.__wbg_save_51c5c825520e8fd0 = function() {
    return f(function(t) {
      a(t).save();
    }, arguments);
  }, n.wbg.__wbg_setfont_34289a9ff190aed8 = function() {
    return f(function(t, e, r) {
      a(t).font = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_measureText_8547338485b05bb0 = function() {
    return k(function(t, e, r) {
      const i = a(t).measureText(I(e, r));
      return m(i);
    }, arguments);
  }, n.wbg.__wbg_width_e4c18791794a7c38 = function() {
    return f(function(t) {
      return a(t).width;
    }, arguments);
  }, n.wbg.__wbg_restore_cd7f36f354e951db = function() {
    return f(function(t) {
      a(t).restore();
    }, arguments);
  }, n.wbg.__wbg_push_36cf4d81d7da33d1 = function() {
    return f(function(t, e) {
      const r = a(t).push(a(e));
      return l(r), r;
    }, arguments);
  }, n.wbg.__wbg_settype_623d2ee701e6310a = function() {
    return f(function(t, e, r) {
      a(t).type = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_newwithu8arraysequenceandoptions_d41c0fdf78490206 = function() {
    return k(function(t, e) {
      const r = new Blob(a(t), a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_log_f740dc2253ea759b = function() {
    return f(function(t) {
      console.log(a(t));
    }, arguments);
  }, n.wbg.__wbg_newwithlength_76462a666eca145f = function() {
    return f(function(t) {
      const e = new Uint8Array(t >>> 0);
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_length_9254c4bd3b9f23c4 = function() {
    return f(function(t) {
      const e = a(t).length;
      return l(e), e;
    }, arguments);
  }, n.wbg.__wbindgen_memory = function() {
    const t = _.memory;
    return m(t);
  }, n.wbg.__wbg_buffer_ccaed51a635d8a2d = function() {
    return f(function(t) {
      const e = a(t).buffer;
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_newwithbyteoffsetandlength_7e3eb787208af730 = function() {
    return f(function(t, e, r) {
      const i = new Uint8Array(a(t), e >>> 0, r >>> 0);
      return m(i);
    }, arguments);
  }, n.wbg.__wbg_set_ec2fcf81bc573fd9 = function() {
    return f(function(t, e, r) {
      a(t).set(a(e), r >>> 0);
    }, arguments);
  }, n.wbg.__wbg_instanceof_Window_6575cd7f1322f82f = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof Window;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_instanceof_WorkerGlobalScope_90a78b9e967b8726 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof WorkerGlobalScope;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_createImageBitmap_7893beeb597d1f1b = function() {
    return k(function(t, e) {
      const r = a(t).createImageBitmap(a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_get_ef828680c64da212 = function() {
    return k(function(t, e) {
      const r = Reflect.get(a(t), a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbindgen_is_function = function(t) {
    const e = typeof a(t) == "function";
    return O(e), e;
  }, n.wbg.__wbg_call_5fb7c8066a4a4825 = function() {
    return k(function(t, e, r, i) {
      const o = a(t).call(a(e), a(r), a(i));
      return m(o);
    }, arguments);
  }, n.wbg.__wbg_instanceof_Promise_f3fd1bcac3157f0c = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof Promise;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_createImageBitmap_17badae68300b0a6 = function() {
    return k(function(t, e) {
      const r = a(t).createImageBitmap(a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_new_1073970097e5a420 = function() {
    return f(function(t, e) {
      try {
        var r = { a: t, b: e }, i = (s, c) => {
          const g = r.a;
          r.a = 0;
          try {
            return pn(g, r.b, s, c);
          } finally {
            r.a = g;
          }
        };
        const o = new Promise(i);
        return m(o);
      } finally {
        r.a = r.b = 0;
      }
    }, arguments);
  }, n.wbg.__wbg_instanceof_ImageBitmap_b77911fe0757088f = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof ImageBitmap;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_instanceof_OffscreenCanvas_ff1551edf0e1303c = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof OffscreenCanvas;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbindgen_number_new = function(t) {
    return m(t);
  }, n.wbg.__wbg_newwithpathstring_ac464baa5b9a788c = function() {
    return k(function(t, e) {
      const r = new Path2D(I(t, e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_new_b5bf9532bd5c97fd = function() {
    return k(function() {
      const t = new Image();
      return m(t);
    }, arguments);
  }, n.wbg.__wbg_createObjectURL_11804d71ac214694 = function() {
    return k(function(t, e) {
      const r = URL.createObjectURL(a(e)), i = L(r, _.__wbindgen_export_0, _.__wbindgen_export_1), o = M;
      b().setInt32(t + 4 * 1, o, !0), b().setInt32(t + 4 * 0, i, !0);
    }, arguments);
  }, n.wbg.__wbg_width_fa277b4243adaabb = function() {
    return f(function(t) {
      const e = a(t).width;
      return l(e), e;
    }, arguments);
  }, n.wbg.__wbg_height_250d8ced017769f8 = function() {
    return f(function(t) {
      const e = a(t).height;
      return l(e), e;
    }, arguments);
  }, n.wbg.__wbg_drawImage_5c4488af6c903314 = function() {
    return k(function(t, e, r, i) {
      a(t).drawImage(a(e), r, i);
    }, arguments);
  }, n.wbg.__wbg_transferToImageBitmap_a7216e0d45f09601 = function() {
    return k(function(t) {
      const e = a(t).transferToImageBitmap();
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_setsrc_feb07d9d5b693db7 = function() {
    return f(function(t, e, r) {
      a(t).src = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setonload_c44788491be30c5c = function() {
    return f(function(t, e) {
      a(t).onload = a(e);
    }, arguments);
  }, n.wbg.__wbg_setonerror_7e172f547433d10e = function() {
    return f(function(t, e) {
      a(t).onerror = a(e);
    }, arguments);
  }, n.wbg.__wbg_setTransform_ab9bffd1dfaadef8 = function() {
    return k(function(t, e, r, i, o, s, c) {
      a(t).setTransform(e, r, i, o, s, c);
    }, arguments);
  }, n.wbg.__wbg_putImageData_f9c66228770c0556 = function() {
    return k(function(t, e, r, i) {
      a(t).putImageData(a(e), r, i);
    }, arguments);
  }, n.wbg.__wbg_globalCompositeOperation_7599ad6f23aa7915 = function() {
    return k(function(t, e) {
      const r = a(e).globalCompositeOperation, i = L(r, _.__wbindgen_export_0, _.__wbindgen_export_1), o = M;
      b().setInt32(t + 4 * 1, o, !0), b().setInt32(t + 4 * 0, i, !0);
    }, arguments);
  }, n.wbg.__wbg_setglobalCompositeOperation_1ec7de7c74b1fffb = function() {
    return k(function(t, e, r) {
      a(t).globalCompositeOperation = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setfillStyle_2cc2c748b938a95e = function() {
    return f(function(t, e, r) {
      a(t).fillStyle = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_fillRect_6784ab0aab9eebd5 = function() {
    return f(function(t, e, r, i, o) {
      a(t).fillRect(e, r, i, o);
    }, arguments);
  }, n.wbg.__wbg_drawImage_007806da723a1e8b = function() {
    return k(function(t, e, r, i) {
      a(t).drawImage(a(e), r, i);
    }, arguments);
  }, n.wbg.__wbg_clip_6e3594f765ee3015 = function() {
    return f(function(t, e) {
      a(t).clip(a(e));
    }, arguments);
  }, n.wbg.__wbg_setstrokeStyle_3c29a4e85b6087f5 = function() {
    return f(function(t, e, r) {
      a(t).strokeStyle = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_stroke_18a7adc53a38d993 = function() {
    return f(function(t, e) {
      a(t).stroke(a(e));
    }, arguments);
  }, n.wbg.__wbg_drawImage_92c2feb5c6a72619 = function() {
    return k(function(t, e, r, i, o, s) {
      a(t).drawImage(a(e), r, i, o, s);
    }, arguments);
  }, n.wbg.__wbg_drawImage_198159bdfa8bb195 = function() {
    return k(function(t, e, r, i, o, s) {
      a(t).drawImage(a(e), r, i, o, s);
    }, arguments);
  }, n.wbg.__wbg_setlineWidth_267c5e81c3c67348 = function() {
    return f(function(t, e) {
      a(t).lineWidth = e;
    }, arguments);
  }, n.wbg.__wbg_setlineCap_46e48efce673b5bc = function() {
    return f(function(t, e, r) {
      a(t).lineCap = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setlineJoin_a17a487f4008f18f = function() {
    return f(function(t, e, r) {
      a(t).lineJoin = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setmiterLimit_4b85dd19bf9935d5 = function() {
    return f(function(t, e) {
      a(t).miterLimit = e;
    }, arguments);
  }, n.wbg.__wbg_setlineDashOffset_4c94a9565370ff7f = function() {
    return f(function(t, e) {
      a(t).lineDashOffset = e;
    }, arguments);
  }, n.wbg.__wbg_restore_53f9e3ba68ab6122 = function() {
    return f(function(t) {
      a(t).restore();
    }, arguments);
  }, n.wbg.__wbg_save_7da51dd755170877 = function() {
    return f(function(t) {
      a(t).save();
    }, arguments);
  }, n.wbg.__wbg_setLineDash_a27082dd66f071a9 = function() {
    return k(function(t, e) {
      a(t).setLineDash(a(e));
    }, arguments);
  }, n.wbg.__wbg_fill_dfa41e6d1844b522 = function() {
    return f(function(t, e) {
      a(t).fill(a(e));
    }, arguments);
  }, n.wbg.__wbg_fill_ab72269002ce7fc4 = function() {
    return f(function(t, e, r) {
      a(t).fill(a(e), zt[r]);
    }, arguments);
  }, n.wbg.__wbg_revokeObjectURL_8e72bad4541bdca0 = function() {
    return k(function(t, e) {
      URL.revokeObjectURL(I(t, e));
    }, arguments);
  }, n.wbg.__wbg_stringify_eead5648c09faaf8 = function() {
    return k(function(t) {
      const e = JSON.stringify(a(t));
      return m(e);
    }, arguments);
  }, n.wbg.__wbindgen_string_get = function(t, e) {
    const r = a(e), i = typeof r == "string" ? r : void 0;
    var o = T(i) ? 0 : L(i, _.__wbindgen_export_0, _.__wbindgen_export_1), s = M;
    b().setInt32(t + 4 * 1, s, !0), b().setInt32(t + 4 * 0, o, !0);
  }, n.wbg.__wbindgen_cb_drop = function(t) {
    const e = R(t).original;
    if (e.cnt-- == 1)
      return e.a = 0, !0;
    const r = !1;
    return O(r), r;
  }, n.wbg.__wbg_setTransform_378786ee36ec3a18 = function() {
    return k(function(t, e, r, i, o, s, c) {
      a(t).setTransform(e, r, i, o, s, c);
    }, arguments);
  }, n.wbg.__wbg_putImageData_44bf3a0787b975b7 = function() {
    return k(function(t, e, r, i) {
      a(t).putImageData(a(e), r, i);
    }, arguments);
  }, n.wbg.__wbg_globalCompositeOperation_ce4b579a83346ce3 = function() {
    return k(function(t, e) {
      const r = a(e).globalCompositeOperation, i = L(r, _.__wbindgen_export_0, _.__wbindgen_export_1), o = M;
      b().setInt32(t + 4 * 1, o, !0), b().setInt32(t + 4 * 0, i, !0);
    }, arguments);
  }, n.wbg.__wbg_setglobalCompositeOperation_904684eaf6e9e441 = function() {
    return k(function(t, e, r) {
      a(t).globalCompositeOperation = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setfillStyle_f8273bc6290143be = function() {
    return f(function(t, e, r) {
      a(t).fillStyle = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_fillRect_0a5c5e635be36fc5 = function() {
    return f(function(t, e, r, i, o) {
      a(t).fillRect(e, r, i, o);
    }, arguments);
  }, n.wbg.__wbg_drawImage_cb573ac1888557f6 = function() {
    return k(function(t, e, r, i) {
      a(t).drawImage(a(e), r, i);
    }, arguments);
  }, n.wbg.__wbg_clip_69ebc8c1a170c5e2 = function() {
    return f(function(t, e) {
      a(t).clip(a(e));
    }, arguments);
  }, n.wbg.__wbg_setstrokeStyle_3c3c67fd62a77730 = function() {
    return f(function(t, e, r) {
      a(t).strokeStyle = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_stroke_a76887577bd68088 = function() {
    return f(function(t, e) {
      a(t).stroke(a(e));
    }, arguments);
  }, n.wbg.__wbg_drawImage_79ac57dabab20303 = function() {
    return k(function(t, e, r, i, o, s) {
      a(t).drawImage(a(e), r, i, o, s);
    }, arguments);
  }, n.wbg.__wbg_drawImage_02d5af4f48e0dc26 = function() {
    return k(function(t, e, r, i, o, s) {
      a(t).drawImage(a(e), r, i, o, s);
    }, arguments);
  }, n.wbg.__wbg_setlineWidth_037dd016057a68de = function() {
    return f(function(t, e) {
      a(t).lineWidth = e;
    }, arguments);
  }, n.wbg.__wbg_setlineCap_aa5b25b6af766ba6 = function() {
    return f(function(t, e, r) {
      a(t).lineCap = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setlineJoin_316d4ae6dc0464ea = function() {
    return f(function(t, e, r) {
      a(t).lineJoin = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_setmiterLimit_06bd35f2d7370de1 = function() {
    return f(function(t, e) {
      a(t).miterLimit = e;
    }, arguments);
  }, n.wbg.__wbg_setlineDashOffset_66ebdfaed783c789 = function() {
    return f(function(t, e) {
      a(t).lineDashOffset = e;
    }, arguments);
  }, n.wbg.__wbg_setLineDash_8566a73c937296d9 = function() {
    return k(function(t, e) {
      a(t).setLineDash(a(e));
    }, arguments);
  }, n.wbg.__wbg_fill_35e67b0a78856ae3 = function() {
    return f(function(t, e) {
      a(t).fill(a(e));
    }, arguments);
  }, n.wbg.__wbg_fill_d28a44b2f91d1baf = function() {
    return f(function(t, e, r) {
      a(t).fill(a(e), zt[r]);
    }, arguments);
  }, n.wbg.__wbg_log_c5235279373186d4 = function() {
    return f(function(t, e) {
      console.log(a(t), a(e));
    }, arguments);
  }, n.wbg.__wbg_replaceWith_abcd4c84c203850c = function() {
    return k(function(t, e) {
      a(t).replaceWith(a(e));
    }, arguments);
  }, n.wbg.__wbg_firstElementChild_26953b81a3e880c1 = function() {
    return f(function(t) {
      const e = a(t).firstElementChild;
      return T(e) ? 0 : m(e);
    }, arguments);
  }, n.wbg.__wbg_instanceof_SvgGraphicsElement_aa4a8dae50f94d8e = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof SVGGraphicsElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_nextElementSibling_f4a27a6c59d89e33 = function() {
    return f(function(t) {
      const e = a(t).nextElementSibling;
      return T(e) ? 0 : m(e);
    }, arguments);
  }, n.wbg.__wbg_lastElementChild_ae2f2e9fde5a862e = function() {
    return f(function(t) {
      const e = a(t).lastElementChild;
      return T(e) ? 0 : m(e);
    }, arguments);
  }, n.wbg.__wbg_document_d7fa2c739c2b191a = function() {
    return f(function(t) {
      const e = a(t).document;
      return T(e) ? 0 : m(e);
    }, arguments);
  }, n.wbg.__wbg_createElement_e4523490bd0ae51d = function() {
    return k(function(t, e, r) {
      const i = a(t).createElement(I(e, r));
      return m(i);
    }, arguments);
  }, n.wbg.__wbg_instanceof_HtmlTemplateElement_bdfc6fd7326a5794 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof HTMLTemplateElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_cloneNode_bd4b7e47afe3ce9f = function() {
    return k(function(t) {
      const e = a(t).cloneNode();
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_instanceof_Element_1a81366cc90e70e2 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof Element;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_setAttribute_2a8f647a8d92c712 = function() {
    return k(function(t, e, r, i, o) {
      a(t).setAttribute(I(e, r), I(i, o));
    }, arguments);
  }, n.wbg.__wbg_style_04eb1488bc2ceffc = function() {
    return f(function(t) {
      const e = a(t).style;
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_setProperty_b9a2384cbfb499fb = function() {
    return k(function(t, e, r, i, o) {
      a(t).setProperty(I(e, r), I(i, o));
    }, arguments);
  }, n.wbg.__wbg_setwidth_23bf2deedd907275 = function() {
    return f(function(t, e) {
      a(t).width = e >>> 0;
    }, arguments);
  }, n.wbg.__wbg_setheight_239dc283bbe50da4 = function() {
    return f(function(t, e) {
      a(t).height = e >>> 0;
    }, arguments);
  }, n.wbg.__wbg_setinnerHTML_559d45055154f1d8 = function() {
    return f(function(t, e, r) {
      a(t).innerHTML = I(e, r);
    }, arguments);
  }, n.wbg.__wbg_getContext_bf8985355a4d22ca = function() {
    return k(function(t, e, r) {
      const i = a(t).getContext(I(e, r));
      return T(i) ? 0 : m(i);
    }, arguments);
  }, n.wbg.__wbg_clearRect_b31e8293856d6504 = function() {
    return f(function(t, e, r, i, o) {
      a(t).clearRect(e, r, i, o);
    }, arguments);
  }, n.wbg.__wbg_getAttribute_8ac49f4186f4cefd = function() {
    return f(function(t, e, r, i) {
      const o = a(e).getAttribute(I(r, i));
      var s = T(o) ? 0 : L(o, _.__wbindgen_export_0, _.__wbindgen_export_1), c = M;
      b().setInt32(t + 4 * 1, c, !0), b().setInt32(t + 4 * 0, s, !0);
    }, arguments);
  }, n.wbg.__wbg_removeProperty_5acbca68235d0706 = function() {
    return k(function(t, e, r, i) {
      const o = a(e).removeProperty(I(r, i)), s = L(o, _.__wbindgen_export_0, _.__wbindgen_export_1), c = M;
      b().setInt32(t + 4 * 1, c, !0), b().setInt32(t + 4 * 0, s, !0);
    }, arguments);
  }, n.wbg.__wbg_content_57ec141416462f04 = function() {
    return f(function(t) {
      const e = a(t).content;
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_firstElementChild_4d48ea0ca6da5169 = function() {
    return f(function(t) {
      const e = a(t).firstElementChild;
      return T(e) ? 0 : m(e);
    }, arguments);
  }, n.wbg.__wbg_instanceof_HtmlCanvasElement_022ad88c76df9031 = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof HTMLCanvasElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_instanceof_SvgsvgElement_c57616bdbf67654f = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof SVGSVGElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_instanceof_HtmlDivElement_571e59de6195834c = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof HTMLDivElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_call_8547f4f9ec48f360 = function() {
    return k(function(t, e, r, i, o) {
      const s = a(t).call(a(e), a(r), a(i), a(o));
      return m(s);
    }, arguments);
  }, n.wbg.__wbg_appendChild_bc4a0deae90a5164 = function() {
    return k(function(t, e) {
      const r = a(t).appendChild(a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_instanceof_HtmlElement_aab18e065dc9207d = function() {
    return f(function(t) {
      let e;
      try {
        e = a(t) instanceof HTMLElement;
      } catch {
        e = !1;
      }
      const r = e;
      return O(r), r;
    }, arguments);
  }, n.wbg.__wbg_warn_41503a1c2194de89 = function() {
    return f(function(t) {
      console.warn(a(t));
    }, arguments);
  }, n.wbg.__wbg_new_fec2611eb9180f95 = function() {
    return f(function(t) {
      const e = new Uint8Array(a(t));
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_clientWidth_600f98ddd2b6cb36 = function() {
    return f(function(t) {
      const e = a(t).clientWidth;
      return l(e), e;
    }, arguments);
  }, n.wbg.__wbg_renderpageimageoptions_unwrap = function() {
    return f(function(t) {
      const e = ot.__unwrap(R(t));
      return l(e), e;
    }, arguments);
  }, n.wbg.__wbindgen_throw = function(t, e) {
    throw new Error(I(t, e));
  }, n.wbg.__wbindgen_debug_string = function(t, e) {
    const r = Rt(a(e)), i = L(r, _.__wbindgen_export_0, _.__wbindgen_export_1), o = M;
    b().setInt32(t + 4 * 1, o, !0), b().setInt32(t + 4 * 0, i, !0);
  }, n.wbg.__wbg_then_4866a7d9f55d8f3e = function() {
    return f(function(t, e, r) {
      const i = a(t).then(a(e), a(r));
      return m(i);
    }, arguments);
  }, n.wbg.__wbg_queueMicrotask_848aa4969108a57e = function() {
    return f(function(t) {
      const e = a(t).queueMicrotask;
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_resolve_0aad7c1484731c99 = function() {
    return f(function(t) {
      const e = Promise.resolve(a(t));
      return m(e);
    }, arguments);
  }, n.wbg.__wbg_then_748f75edfb032440 = function() {
    return f(function(t, e) {
      const r = a(t).then(a(e));
      return m(r);
    }, arguments);
  }, n.wbg.__wbg_queueMicrotask_c5419c06eab41e73 = function() {
    return f(function(t) {
      queueMicrotask(a(t));
    }, arguments);
  }, n.wbg.__wbindgen_closure_wrapper1670 = function() {
    return f(function(t, e, r) {
      const i = Wt(t, e, 201, fn);
      return m(i);
    }, arguments);
  }, n.wbg.__wbindgen_closure_wrapper1671 = function() {
    return f(function(t, e, r) {
      const i = Wt(t, e, 201, wn);
      return m(i);
    }, arguments);
  }, n.wbg.__wbindgen_closure_wrapper2245 = function() {
    return f(function(t, e, r) {
      const i = ln(t, e, 201, bn);
      return m(i);
    }, arguments);
  }, n;
}
function fe(n, t) {
  return _ = n.exports, we.__wbindgen_wasm_module = t, J = null, Y = null, Q = null, _;
}
function Sn(n) {
  if (_ !== void 0) return _;
  typeof n < "u" && (Object.getPrototypeOf(n) === Object.prototype ? { module: n } = n : console.warn("using deprecated parameters for `initSync()`; pass a single object instead"));
  const t = de();
  n instanceof WebAssembly.Module || (n = new WebAssembly.Module(n));
  const e = new WebAssembly.Instance(n, t);
  return fe(e, n);
}
async function we(n) {
  if (_ !== void 0) return _;
  typeof n < "u" && (Object.getPrototypeOf(n) === Object.prototype ? { module_or_path: n } = n : console.warn("using deprecated parameters for the initialization function; pass a single object instead")), typeof n > "u" && (n = le("typst_ts_renderer_bg.wasm", import.meta.url));
  const t = de();
  (typeof n == "string" || typeof Request == "function" && n instanceof Request || typeof URL == "function" && n instanceof URL) && (n = fetch(n));
  const { instance: e, module: r } = await En(await n, t);
  return fe(e, r);
}
let le = async function(n, t) {
  throw new Error("Cannot import wasm module without importer: " + n + " " + t);
};
function be(n) {
  le = n;
}
let Rn = async function(n, t) {
  const e = new Function("m", "return import(m)"), r = await e("path"), { readFileSync: i } = await e("fs"), o = new URL(r.join(r.dirname(t), n));
  return await i(o).buffer;
};
const Cn = typeof process < "u" && process.versions != null && process.versions.node != null;
Cn && be(Rn);
const pe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  CreateSessionOptions: ge,
  IncrDomDocClient: gt,
  PageInfo: rt,
  PagesInfo: dt,
  RenderPageImageOptions: ot,
  RenderSession: j,
  RenderSessionOptions: vn,
  TypstRenderer: ft,
  TypstRendererBuilder: xn,
  TypstWorker: In,
  WorkerBridge: wt,
  default: we,
  initSync: Sn,
  renderer_build_info: hn,
  setImportWasmModule: be
}, Symbol.toStringTag, { value: "Module" }));
let u;
const V = new Array(128).fill(void 0);
V.push(void 0, null, !0, !1);
function p(n) {
  return V[n];
}
let nt = V.length;
function An(n) {
  n < 132 || (V[n] = nt, nt = n);
}
function S(n) {
  const t = p(n);
  return An(n), t;
}
function v(n) {
  nt === V.length && V.push(V.length + 1);
  const t = nt;
  return nt = V[t], V[t] = n, t;
}
function B(n) {
  return n == null;
}
let K = null;
function x() {
  return (K === null || K.buffer.detached === !0 || K.buffer.detached === void 0 && K.buffer !== u.memory.buffer) && (K = new DataView(u.memory.buffer)), K;
}
let A = 0, Z = null;
function X() {
  return (Z === null || Z.byteLength === 0) && (Z = new Uint8Array(u.memory.buffer)), Z;
}
const at = typeof TextEncoder < "u" ? new TextEncoder("utf-8") : { encode: () => {
  throw Error("TextEncoder not available");
} }, Mn = typeof at.encodeInto == "function" ? function(n, t) {
  return at.encodeInto(n, t);
} : function(n, t) {
  const e = at.encode(n);
  return t.set(e), {
    read: n.length,
    written: e.length
  };
};
function F(n, t, e) {
  if (e === void 0) {
    const c = at.encode(n), g = t(c.length, 1) >>> 0;
    return X().subarray(g, g + c.length).set(c), A = c.length, g;
  }
  let r = n.length, i = t(r, 1) >>> 0;
  const o = X();
  let s = 0;
  for (; s < r; s++) {
    const c = n.charCodeAt(s);
    if (c > 127) break;
    o[i + s] = c;
  }
  if (s !== r) {
    s !== 0 && (n = n.slice(s)), i = e(i, r, r = s + n.length * 3, 1) >>> 0;
    const c = X().subarray(i + s, i + r), g = Mn(n, c);
    s += g.written, i = e(i, r, s, 1) >>> 0;
  }
  return A = s, i;
}
const he = typeof TextDecoder < "u" ? new TextDecoder("utf-8", { ignoreBOM: !0, fatal: !0 }) : { decode: () => {
  throw Error("TextDecoder not available");
} };
typeof TextDecoder < "u" && he.decode();
function N(n, t) {
  return n = n >>> 0, he.decode(X().subarray(n, n + t));
}
function Ct(n) {
  const t = typeof n;
  if (t == "number" || t == "boolean" || n == null)
    return `${n}`;
  if (t == "string")
    return `"${n}"`;
  if (t == "symbol") {
    const i = n.description;
    return i == null ? "Symbol" : `Symbol(${i})`;
  }
  if (t == "function") {
    const i = n.name;
    return typeof i == "string" && i.length > 0 ? `Function(${i})` : "Function";
  }
  if (Array.isArray(n)) {
    const i = n.length;
    let o = "[";
    i > 0 && (o += Ct(n[0]));
    for (let s = 1; s < i; s++)
      o += ", " + Ct(n[s]);
    return o += "]", o;
  }
  const e = /\[object ([^\]]+)\]/.exec(toString.call(n));
  let r;
  if (e.length > 1)
    r = e[1];
  else
    return toString.call(n);
  if (r == "Object")
    try {
      return "Object(" + JSON.stringify(n) + ")";
    } catch {
      return "Object";
    }
  return n instanceof Error ? `${n.name}: ${n.message}
${n.stack}` : r;
}
const Qt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => {
  u.__wbindgen_export_2.get(n.dtor)(n.a, n.b);
});
function Pn(n, t, e, r) {
  const i = { a: n, b: t, cnt: 1, dtor: e }, o = (...s) => {
    i.cnt++;
    const c = i.a;
    i.a = 0;
    try {
      return r(c, i.b, ...s);
    } finally {
      --i.cnt === 0 ? (u.__wbindgen_export_2.get(i.dtor)(c, i.b), Qt.unregister(i)) : i.a = c;
    }
  };
  return o.original = i, Qt.register(o, i, i), o;
}
function Tn(n, t, e) {
  u.__wbindgen_export_3(n, t, v(e));
}
function q(n, t) {
  try {
    return n.apply(this, t);
  } catch (e) {
    u.__wbindgen_export_5(v(e));
  }
}
function On(n, t, e, r) {
  u.__wbindgen_export_6(n, t, v(e), v(r));
}
function me(n, t) {
  const e = t(n.length * 1, 1) >>> 0;
  return X().set(n, e / 1), A = n.length, e;
}
function Fn(n) {
  const t = u.get_font_info(v(n));
  return S(t);
}
function Ln(n, t) {
  n = n >>> 0;
  const e = x(), r = [];
  for (let i = n; i < n + 4 * t; i += 4)
    r.push(S(e.getUint32(i, !0)));
  return r;
}
function st(n, t) {
  const e = t(n.length * 4, 4) >>> 0, r = x();
  for (let i = 0; i < n.length; i++)
    r.setUint32(e + 4 * i, v(n[i]), !0);
  return A = n.length, e;
}
function Dn(n, t) {
  if (!(n instanceof t))
    throw new Error(`expected instance of ${t.name}`);
  return n.ptr;
}
function $n(n, t) {
  return n = n >>> 0, X().subarray(n / 1, n / 1 + t);
}
const Yt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => u.__wbg_incrserver_free(n >>> 0, 1));
class it {
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(it.prototype);
    return e.__wbg_ptr = t, Yt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Yt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    u.__wbg_incrserver_free(t, 0);
  }
  /**
   * @param {boolean} attach
   */
  set_attach_debug_info(t) {
    u.incrserver_set_attach_debug_info(this.__wbg_ptr, t);
  }
  /**
   * @returns {Uint8Array | undefined}
   */
  current() {
    try {
      const r = u.__wbindgen_add_to_stack_pointer(-16);
      u.incrserver_current(r, this.__wbg_ptr);
      var t = x().getInt32(r + 4 * 0, !0), e = x().getInt32(r + 4 * 1, !0);
      let i;
      return t !== 0 && (i = $n(t, e).slice(), u.__wbindgen_export_4(t, e * 1, 1)), i;
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  reset() {
    u.incrserver_reset(this.__wbg_ptr);
  }
}
const kt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => u.__wbg_proxycontext_free(n >>> 0, 1));
class lt {
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(lt.prototype);
    return e.__wbg_ptr = t, kt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, kt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    u.__wbg_proxycontext_free(t, 0);
  }
  /**
   * @param {any} context
   */
  constructor(t) {
    const e = u.proxycontext_new(v(t));
    return this.__wbg_ptr = e >>> 0, kt.register(this, this.__wbg_ptr, this), this;
  }
  /**
   * @returns {any}
   */
  get context() {
    const t = u.proxycontext_context(this.__wbg_ptr);
    return S(t);
  }
  /**
   * @param {Uint8Array} data
   * @param {Function} cb
   */
  untar(t, e) {
    try {
      const o = u.__wbindgen_add_to_stack_pointer(-16), s = me(t, u.__wbindgen_export_0), c = A;
      u.proxycontext_untar(o, this.__wbg_ptr, s, c, v(e));
      var r = x().getInt32(o + 4 * 0, !0), i = x().getInt32(o + 4 * 1, !0);
      if (i)
        throw S(r);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const Zt = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => u.__wbg_typstcompiler_free(n >>> 0, 1));
class bt {
  static __wrap(t) {
    t = t >>> 0;
    const e = Object.create(bt.prototype);
    return e.__wbg_ptr = t, Zt.register(e, e.__wbg_ptr, e), e;
  }
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, Zt.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    u.__wbg_typstcompiler_free(t, 0);
  }
  reset() {
    try {
      const r = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompiler_reset(r, this.__wbg_ptr);
      var t = x().getInt32(r + 4 * 0, !0), e = x().getInt32(r + 4 * 1, !0);
      if (e)
        throw S(t);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {any} inputs
   */
  set_inputs(t) {
    try {
      const i = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompiler_set_inputs(i, this.__wbg_ptr, v(t));
      var e = x().getInt32(i + 4 * 0, !0), r = x().getInt32(i + 4 * 1, !0);
      if (r)
        throw S(e);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} path
   * @param {string} content
   * @returns {boolean}
   */
  add_source(t, e) {
    const r = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), i = A, o = F(e, u.__wbindgen_export_0, u.__wbindgen_export_1), s = A;
    return u.typstcompiler_add_source(this.__wbg_ptr, r, i, o, s) !== 0;
  }
  /**
   * @param {string} path
   * @param {Uint8Array} content
   * @returns {boolean}
   */
  map_shadow(t, e) {
    const r = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), i = A, o = me(e, u.__wbindgen_export_0), s = A;
    return u.typstcompiler_add_source(this.__wbg_ptr, r, i, o, s) !== 0;
  }
  /**
   * @param {string} path
   * @returns {boolean}
   */
  unmap_shadow(t) {
    const e = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), r = A;
    return u.typstcompiler_unmap_shadow(this.__wbg_ptr, e, r) !== 0;
  }
  reset_shadow() {
    u.typstcompiler_reset_shadow(this.__wbg_ptr);
  }
  /**
   * @returns {(string)[]}
   */
  get_loaded_fonts() {
    try {
      const i = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompiler_get_loaded_fonts(i, this.__wbg_ptr);
      var t = x().getInt32(i + 4 * 0, !0), e = x().getInt32(i + 4 * 1, !0), r = Ln(t, e).slice();
      return u.__wbindgen_export_4(t, e * 4, 4), r;
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} main_file_path
   * @returns {string}
   */
  get_ast(t) {
    let e, r;
    try {
      const w = u.__wbindgen_add_to_stack_pointer(-16), y = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), P = A;
      u.typstcompiler_get_ast(w, this.__wbg_ptr, y, P);
      var i = x().getInt32(w + 4 * 0, !0), o = x().getInt32(w + 4 * 1, !0), s = x().getInt32(w + 4 * 2, !0), c = x().getInt32(w + 4 * 3, !0), g = i, d = o;
      if (c)
        throw g = 0, d = 0, S(s);
      return e = g, r = d, N(g, d);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16), u.__wbindgen_export_4(e, r, 1);
    }
  }
  /**
   * @returns {any}
   */
  get_semantic_token_legend() {
    try {
      const i = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompiler_get_semantic_token_legend(i, this.__wbg_ptr);
      var t = x().getInt32(i + 4 * 0, !0), e = x().getInt32(i + 4 * 1, !0), r = x().getInt32(i + 4 * 2, !0);
      if (r)
        throw S(e);
      return S(t);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} offset_encoding
   * @param {string | undefined} [file_path]
   * @param {string | undefined} [result_id]
   * @returns {object}
   */
  get_semantic_tokens(t, e, r) {
    try {
      const y = u.__wbindgen_add_to_stack_pointer(-16), P = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), C = A;
      var i = B(e) ? 0 : F(e, u.__wbindgen_export_0, u.__wbindgen_export_1), o = A, s = B(r) ? 0 : F(r, u.__wbindgen_export_0, u.__wbindgen_export_1), c = A;
      u.typstcompiler_get_semantic_tokens(y, this.__wbg_ptr, P, C, i, o, s, c);
      var g = x().getInt32(y + 4 * 0, !0), d = x().getInt32(y + 4 * 1, !0), w = x().getInt32(y + 4 * 2, !0);
      if (w)
        throw S(d);
      return S(g);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} fmt
   * @param {number} diagnostics_format
   * @returns {any}
   */
  get_artifact(t, e) {
    try {
      const s = u.__wbindgen_add_to_stack_pointer(-16), c = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), g = A;
      u.typstcompiler_get_artifact(s, this.__wbg_ptr, c, g, e);
      var r = x().getInt32(s + 4 * 0, !0), i = x().getInt32(s + 4 * 1, !0), o = x().getInt32(s + 4 * 2, !0);
      if (o)
        throw S(i);
      return S(r);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} main_file_path
   * @param {(Array<any>)[] | undefined} [inputs]
   */
  set_compiler_options(t, e) {
    try {
      const c = u.__wbindgen_add_to_stack_pointer(-16), g = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), d = A;
      var r = B(e) ? 0 : st(e, u.__wbindgen_export_0), i = A;
      u.typstcompiler_set_compiler_options(c, this.__wbg_ptr, g, d, r, i);
      var o = x().getInt32(c + 4 * 0, !0), s = x().getInt32(c + 4 * 1, !0);
      if (s)
        throw S(o);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} main_file_path
   * @param {(Array<any>)[] | undefined} inputs
   * @param {string} selector
   * @param {string | undefined} [field]
   * @returns {string}
   */
  query(t, e, r, i) {
    let o, s;
    try {
      const $ = u.__wbindgen_add_to_stack_pointer(-16), Se = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), Re = A;
      var c = B(e) ? 0 : st(e, u.__wbindgen_export_0), g = A;
      const Ce = F(r, u.__wbindgen_export_0, u.__wbindgen_export_1), Ae = A;
      var d = B(i) ? 0 : F(i, u.__wbindgen_export_0, u.__wbindgen_export_1), w = A;
      u.typstcompiler_query($, this.__wbg_ptr, Se, Re, c, g, Ce, Ae, d, w);
      var y = x().getInt32($ + 4 * 0, !0), P = x().getInt32($ + 4 * 1, !0), C = x().getInt32($ + 4 * 2, !0), W = x().getInt32($ + 4 * 3, !0), D = y, z = P;
      if (W)
        throw D = 0, z = 0, S(C);
      return o = D, s = z, N(D, z);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16), u.__wbindgen_export_4(o, s, 1);
    }
  }
  /**
   * @param {string} main_file_path
   * @param {(Array<any>)[] | undefined} inputs
   * @param {string} fmt
   * @param {number} diagnostics_format
   * @returns {any}
   */
  compile(t, e, r, i) {
    try {
      const w = u.__wbindgen_add_to_stack_pointer(-16), y = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), P = A;
      var o = B(e) ? 0 : st(e, u.__wbindgen_export_0), s = A;
      const C = F(r, u.__wbindgen_export_0, u.__wbindgen_export_1), W = A;
      u.typstcompiler_compile(w, this.__wbg_ptr, y, P, o, s, C, W, i);
      var c = x().getInt32(w + 4 * 0, !0), g = x().getInt32(w + 4 * 1, !0), d = x().getInt32(w + 4 * 2, !0);
      if (d)
        throw S(g);
      return S(c);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @returns {IncrServer}
   */
  create_incr_server() {
    try {
      const i = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompiler_create_incr_server(i, this.__wbg_ptr);
      var t = x().getInt32(i + 4 * 0, !0), e = x().getInt32(i + 4 * 1, !0), r = x().getInt32(i + 4 * 2, !0);
      if (r)
        throw S(e);
      return it.__wrap(t);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {string} main_file_path
   * @param {(Array<any>)[] | undefined} inputs
   * @param {IncrServer} state
   * @param {number} diagnostics_format
   * @returns {any}
   */
  incr_compile(t, e, r, i) {
    try {
      const w = u.__wbindgen_add_to_stack_pointer(-16), y = F(t, u.__wbindgen_export_0, u.__wbindgen_export_1), P = A;
      var o = B(e) ? 0 : st(e, u.__wbindgen_export_0), s = A;
      Dn(r, it), u.typstcompiler_incr_compile(w, this.__wbg_ptr, y, P, o, s, r.__wbg_ptr, i);
      var c = x().getInt32(w + 4 * 0, !0), g = x().getInt32(w + 4 * 1, !0), d = x().getInt32(w + 4 * 2, !0);
      if (d)
        throw S(g);
      return S(c);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
}
const te = typeof FinalizationRegistry > "u" ? { register: () => {
}, unregister: () => {
} } : new FinalizationRegistry((n) => u.__wbg_typstcompilerbuilder_free(n >>> 0, 1));
class jn {
  __destroy_into_raw() {
    const t = this.__wbg_ptr;
    return this.__wbg_ptr = 0, te.unregister(this), t;
  }
  free() {
    const t = this.__destroy_into_raw();
    u.__wbg_typstcompilerbuilder_free(t, 0);
  }
  constructor() {
    try {
      const i = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompilerbuilder_new(i);
      var t = x().getInt32(i + 4 * 0, !0), e = x().getInt32(i + 4 * 1, !0), r = x().getInt32(i + 4 * 2, !0);
      if (r)
        throw S(e);
      return this.__wbg_ptr = t >>> 0, te.register(this, this.__wbg_ptr, this), this;
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  set_dummy_access_model() {
    try {
      const r = u.__wbindgen_add_to_stack_pointer(-16);
      u.typstcompilerbuilder_set_dummy_access_model(r, this.__wbg_ptr);
      var t = x().getInt32(r + 4 * 0, !0), e = x().getInt32(r + 4 * 1, !0);
      if (e)
        throw S(t);
    } finally {
      u.__wbindgen_add_to_stack_pointer(16);
    }
  }
  /**
   * @param {any} context
   * @param {Function} mtime_fn
   * @param {Function} is_file_fn
   * @param {Function} real_path_fn
   * @param {Function} read_all_fn
   * @returns {Promise<void>}
   */
  set_access_model(t, e, r, i, o) {
    const s = u.typstcompilerbuilder_set_access_model(this.__wbg_ptr, v(t), v(e), v(r), v(i), v(o));
    return S(s);
  }
  /**
   * @param {any} context
   * @param {Function} real_resolve_fn
   * @returns {Promise<void>}
   */
  set_package_registry(t, e) {
    const r = u.typstcompilerbuilder_set_package_registry(this.__wbg_ptr, v(t), v(e));
    return S(r);
  }
  /**
   * @param {Uint8Array} font_buffer
   * @returns {Promise<void>}
   */
  add_raw_font(t) {
    const e = u.typstcompilerbuilder_add_raw_font(this.__wbg_ptr, v(t));
    return S(e);
  }
  /**
   * @param {Array<any>} fonts
   * @returns {Promise<void>}
   */
  add_web_fonts(t) {
    const e = u.typstcompilerbuilder_add_web_fonts(this.__wbg_ptr, v(t));
    return S(e);
  }
  /**
   * @param {any} _pack
   * @returns {Promise<void>}
   */
  add_glyph_pack(t) {
    const e = u.typstcompilerbuilder_add_glyph_pack(this.__wbg_ptr, v(t));
    return S(e);
  }
  /**
   * @returns {Promise<TypstCompiler>}
   */
  build() {
    const t = this.__destroy_into_raw(), e = u.typstcompilerbuilder_build(t);
    return S(e);
  }
}
async function Wn(n, t) {
  if (typeof Response == "function" && n instanceof Response) {
    if (typeof WebAssembly.instantiateStreaming == "function")
      try {
        return await WebAssembly.instantiateStreaming(n, t);
      } catch (r) {
        if (n.headers.get("Content-Type") != "application/wasm")
          console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", r);
        else
          throw r;
      }
    const e = await n.arrayBuffer();
    return await WebAssembly.instantiate(e, t);
  } else {
    const e = await WebAssembly.instantiate(n, t);
    return e instanceof WebAssembly.Instance ? { instance: e, module: n } : e;
  }
}
function ye() {
  const n = {};
  return n.wbg = {}, n.wbg.__wbindgen_object_drop_ref = function(t) {
    S(t);
  }, n.wbg.__wbg_new_abda76e883ba8a5f = function() {
    const t = new Error();
    return v(t);
  }, n.wbg.__wbg_stack_658279fe44541cf6 = function(t, e) {
    const r = p(e).stack, i = F(r, u.__wbindgen_export_0, u.__wbindgen_export_1), o = A;
    x().setInt32(t + 4 * 1, o, !0), x().setInt32(t + 4 * 0, i, !0);
  }, n.wbg.__wbg_error_f851667af71bcfc6 = function(t, e) {
    let r, i;
    try {
      r = t, i = e, console.error(N(t, e));
    } finally {
      u.__wbindgen_export_4(r, i, 1);
    }
  }, n.wbg.__wbg_iterator_695d699a44d6234c = function() {
    return v(Symbol.iterator);
  }, n.wbg.__wbg_get_ef828680c64da212 = function() {
    return q(function(t, e) {
      const r = Reflect.get(p(t), p(e));
      return v(r);
    }, arguments);
  }, n.wbg.__wbindgen_is_function = function(t) {
    return typeof p(t) == "function";
  }, n.wbg.__wbg_call_a9ef466721e824f2 = function() {
    return q(function(t, e) {
      const r = p(t).call(p(e));
      return v(r);
    }, arguments);
  }, n.wbg.__wbindgen_is_object = function(t) {
    const e = p(t);
    return typeof e == "object" && e !== null;
  }, n.wbg.__wbg_next_13b477da1eaa3897 = function(t) {
    const e = p(t).next;
    return v(e);
  }, n.wbg.__wbg_length_9254c4bd3b9f23c4 = function(t) {
    return p(t).length;
  }, n.wbg.__wbindgen_memory = function() {
    const t = u.memory;
    return v(t);
  }, n.wbg.__wbg_buffer_ccaed51a635d8a2d = function(t) {
    const e = p(t).buffer;
    return v(e);
  }, n.wbg.__wbg_new_fec2611eb9180f95 = function(t) {
    const e = new Uint8Array(p(t));
    return v(e);
  }, n.wbg.__wbg_set_ec2fcf81bc573fd9 = function(t, e, r) {
    p(t).set(p(e), r >>> 0);
  }, n.wbg.__wbg_self_bf91bf94d9e04084 = function() {
    return q(function() {
      const t = self.self;
      return v(t);
    }, arguments);
  }, n.wbg.__wbg_window_52dd9f07d03fd5f8 = function() {
    return q(function() {
      const t = window.window;
      return v(t);
    }, arguments);
  }, n.wbg.__wbg_globalThis_05c129bf37fcf1be = function() {
    return q(function() {
      const t = globalThis.globalThis;
      return v(t);
    }, arguments);
  }, n.wbg.__wbg_global_3eca19bb09e9c484 = function() {
    return q(function() {
      const t = global.global;
      return v(t);
    }, arguments);
  }, n.wbg.__wbindgen_is_undefined = function(t) {
    return p(t) === void 0;
  }, n.wbg.__wbg_newnoargs_1ede4bf2ebbaaf43 = function(t, e) {
    const r = new Function(N(t, e));
    return v(r);
  }, n.wbg.__wbg_new_70a2f23d1565c04c = function(t, e) {
    const r = new Error(N(t, e));
    return v(r);
  }, n.wbg.__wbindgen_jsval_loose_eq = function(t, e) {
    return p(t) == p(e);
  }, n.wbg.__wbindgen_boolean_get = function(t) {
    const e = p(t);
    return typeof e == "boolean" ? e ? 1 : 0 : 2;
  }, n.wbg.__wbindgen_is_bigint = function(t) {
    return typeof p(t) == "bigint";
  }, n.wbg.__wbindgen_number_get = function(t, e) {
    const r = p(e), i = typeof r == "number" ? r : void 0;
    x().setFloat64(t + 8 * 1, B(i) ? 0 : i, !0), x().setInt32(t + 4 * 0, !B(i), !0);
  }, n.wbg.__wbindgen_string_get = function(t, e) {
    const r = p(e), i = typeof r == "string" ? r : void 0;
    var o = B(i) ? 0 : F(i, u.__wbindgen_export_0, u.__wbindgen_export_1), s = A;
    x().setInt32(t + 4 * 1, s, !0), x().setInt32(t + 4 * 0, o, !0);
  }, n.wbg.__wbg_isArray_6f3b47f09adb61b5 = function(t) {
    return Array.isArray(p(t));
  }, n.wbg.__wbindgen_in = function(t, e) {
    return p(t) in p(e);
  }, n.wbg.__wbg_instanceof_Map_f96986929e7e89ed = function(t) {
    let e;
    try {
      e = p(t) instanceof Map;
    } catch {
      e = !1;
    }
    return e;
  }, n.wbg.__wbg_isSafeInteger_b9dff570f01a9100 = function(t) {
    return Number.isSafeInteger(p(t));
  }, n.wbg.__wbindgen_bigint_get_as_i64 = function(t, e) {
    const r = p(e), i = typeof r == "bigint" ? r : void 0;
    x().setBigInt64(t + 8 * 1, B(i) ? BigInt(0) : i, !0), x().setInt32(t + 4 * 0, !B(i), !0);
  }, n.wbg.__wbindgen_bigint_from_i64 = function(t) {
    return v(t);
  }, n.wbg.__wbindgen_jsval_eq = function(t, e) {
    return p(t) === p(e);
  }, n.wbg.__wbindgen_bigint_from_u64 = function(t) {
    const e = BigInt.asUintN(64, t);
    return v(e);
  }, n.wbg.__wbindgen_error_new = function(t, e) {
    const r = new Error(N(t, e));
    return v(r);
  }, n.wbg.__wbindgen_object_clone_ref = function(t) {
    const e = p(t);
    return v(e);
  }, n.wbg.__wbindgen_string_new = function(t, e) {
    const r = N(t, e);
    return v(r);
  }, n.wbg.__wbg_newwithbyteoffsetandlength_7e3eb787208af730 = function(t, e, r) {
    const i = new Uint8Array(p(t), e >>> 0, r >>> 0);
    return v(i);
  }, n.wbg.__wbindgen_number_new = function(t) {
    return v(t);
  }, n.wbg.__wbg_call_8547f4f9ec48f360 = function() {
    return q(function(t, e, r, i, o) {
      const s = p(t).call(p(e), p(r), p(i), p(o));
      return v(s);
    }, arguments);
  }, n.wbg.__wbg_next_b06e115d1b01e10b = function() {
    return q(function(t) {
      const e = p(t).next();
      return v(e);
    }, arguments);
  }, n.wbg.__wbg_done_983b5ffcaec8c583 = function(t) {
    return p(t).done;
  }, n.wbg.__wbg_value_2ab8a198c834c26a = function(t) {
    const e = p(t).value;
    return v(e);
  }, n.wbg.__wbg_get_5419cf6b954aa11d = function(t, e) {
    const r = p(t)[e >>> 0];
    return v(r);
  }, n.wbg.__wbg_entries_c02034de337d3ee2 = function(t) {
    const e = Object.entries(p(t));
    return v(e);
  }, n.wbg.__wbg_length_f217bbbf7e8e4df4 = function(t) {
    return p(t).length;
  }, n.wbg.__wbg_getwithrefkey_edc2c8960f0f1191 = function(t, e) {
    const r = p(t)[p(e)];
    return v(r);
  }, n.wbg.__wbindgen_is_string = function(t) {
    return typeof p(t) == "string";
  }, n.wbg.__wbindgen_as_number = function(t) {
    return +p(t);
  }, n.wbg.__wbg_instanceof_Object_4bbac482eda9b711 = function(t) {
    let e;
    try {
      e = p(t) instanceof Object;
    } catch {
      e = !1;
    }
    return e;
  }, n.wbg.__wbg_log_a0e624261f3b0108 = function(t, e, r) {
    console.log(p(t), p(e), p(r));
  }, n.wbg.__wbg_call_3bfa248576352471 = function() {
    return q(function(t, e, r) {
      const i = p(t).call(p(e), p(r));
      return v(i);
    }, arguments);
  }, n.wbg.__wbg_instanceof_ArrayBuffer_74945570b4a62ec7 = function(t) {
    let e;
    try {
      e = p(t) instanceof ArrayBuffer;
    } catch {
      e = !1;
    }
    return e;
  }, n.wbg.__wbg_instanceof_Uint8Array_df0761410414ef36 = function(t) {
    let e;
    try {
      e = p(t) instanceof Uint8Array;
    } catch {
      e = !1;
    }
    return e;
  }, n.wbg.__wbg_new_e69b5f66fda8f13c = function() {
    const t = new Object();
    return v(t);
  }, n.wbg.__wbg_new_034f913e7636e987 = function() {
    const t = new Array();
    return v(t);
  }, n.wbg.__wbg_set_f975102236d3c502 = function(t, e, r) {
    p(t)[S(e)] = S(r);
  }, n.wbg.__wbg_set_425e70f7c64ac962 = function(t, e, r) {
    p(t)[e >>> 0] = S(r);
  }, n.wbg.__wbg_now_70af4fe37a792251 = function() {
    return Date.now();
  }, n.wbg.__wbg_newwithbyteoffsetandlength_5f67057565ba35bf = function(t, e, r) {
    const i = new Uint32Array(p(t), e >>> 0, r >>> 0);
    return v(i);
  }, n.wbg.__wbg_new_f72bacad1bb22b64 = function(t) {
    const e = new Uint32Array(p(t));
    return v(e);
  }, n.wbg.__wbg_set_e864d25d9b399c9f = function() {
    return q(function(t, e, r) {
      return Reflect.set(p(t), p(e), p(r));
    }, arguments);
  }, n.wbg.__wbg_push_36cf4d81d7da33d1 = function(t, e) {
    return p(t).push(p(e));
  }, n.wbg.__wbg_proxycontext_new = function(t) {
    const e = lt.__wrap(t);
    return v(e);
  }, n.wbg.__wbg_newwithargs_54f5f31ff1323eb2 = function(t, e, r, i) {
    const o = new Function(N(t, e), N(r, i));
    return v(o);
  }, n.wbg.__wbg_new_1073970097e5a420 = function(t, e) {
    try {
      var r = { a: t, b: e }, i = (s, c) => {
        const g = r.a;
        r.a = 0;
        try {
          return On(g, r.b, s, c);
        } finally {
          r.a = g;
        }
      };
      const o = new Promise(i);
      return v(o);
    } finally {
      r.a = r.b = 0;
    }
  }, n.wbg.__wbg_typstcompiler_new = function(t) {
    const e = bt.__wrap(t);
    return v(e);
  }, n.wbg.__wbg_error_428a497903e96efa = function(t, e, r) {
    console.error(p(t), p(e), p(r));
  }, n.wbg.__wbindgen_throw = function(t, e) {
    throw new Error(N(t, e));
  }, n.wbg.__wbindgen_debug_string = function(t, e) {
    const r = Ct(p(e)), i = F(r, u.__wbindgen_export_0, u.__wbindgen_export_1), o = A;
    x().setInt32(t + 4 * 1, o, !0), x().setInt32(t + 4 * 0, i, !0);
  }, n.wbg.__wbg_queueMicrotask_848aa4969108a57e = function(t) {
    const e = p(t).queueMicrotask;
    return v(e);
  }, n.wbg.__wbg_resolve_0aad7c1484731c99 = function(t) {
    const e = Promise.resolve(p(t));
    return v(e);
  }, n.wbg.__wbindgen_cb_drop = function(t) {
    const e = S(t).original;
    return e.cnt-- == 1 ? (e.a = 0, !0) : !1;
  }, n.wbg.__wbg_then_748f75edfb032440 = function(t, e) {
    const r = p(t).then(p(e));
    return v(r);
  }, n.wbg.__wbg_queueMicrotask_c5419c06eab41e73 = function(t) {
    queueMicrotask(p(t));
  }, n.wbg.__wbindgen_closure_wrapper15118 = function(t, e, r) {
    const i = Pn(t, e, 1488, Tn);
    return v(i);
  }, n;
}
function ve(n, t) {
  return u = n.exports, xe.__wbindgen_wasm_module = t, K = null, Z = null, u;
}
function Bn(n) {
  if (u !== void 0) return u;
  typeof n < "u" && (Object.getPrototypeOf(n) === Object.prototype ? { module: n } = n : console.warn("using deprecated parameters for `initSync()`; pass a single object instead"));
  const t = ye();
  n instanceof WebAssembly.Module || (n = new WebAssembly.Module(n));
  const e = new WebAssembly.Instance(n, t);
  return ve(e, n);
}
async function xe(n) {
  if (u !== void 0) return u;
  typeof n < "u" && (Object.getPrototypeOf(n) === Object.prototype ? { module_or_path: n } = n : console.warn("using deprecated parameters for the initialization function; pass a single object instead")), typeof n > "u" && (n = ke("typst_ts_web_compiler_bg.wasm", import.meta.url));
  const t = ye();
  (typeof n == "string" || typeof Request == "function" && n instanceof Request || typeof URL == "function" && n instanceof URL) && (n = fetch(n));
  const { instance: e, module: r } = await Wn(await n, t);
  return ve(e, r);
}
let ke = async function(n, t) {
  throw new Error("Cannot import wasm module without importer: " + n + " " + t);
};
function Ie(n) {
  ke = n;
}
let zn = async function(n, t) {
  const e = new Function("m", "return import(m)"), r = await e("path"), { readFileSync: i } = await e("fs"), o = new URL(r.join(r.dirname(t), n));
  return await i(o).buffer;
};
const Un = typeof process < "u" && process.versions != null && process.versions.node != null;
Un && Ie(zn);
const Ee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  IncrServer: it,
  ProxyContext: lt,
  TypstCompiler: bt,
  TypstCompilerBuilder: jn,
  default: xe,
  get_font_info: Fn,
  initSync: Bn,
  setImportWasmModule: Ie
}, Symbol.toStringTag, { value: "Module" }));
export {
  an as FetchAccessModel,
  un as FetchPackageRegistry,
  sn as createTypstCompiler,
  Dt as createTypstRenderer,
  Kn as createTypstSvgRenderer,
  It as preloadRemoteFonts,
  Tt as preloadSystemFonts,
  Gn as rendererBuildInfo
};
